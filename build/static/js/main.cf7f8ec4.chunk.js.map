{"version":3,"sources":["services/httpService.js","services/authService.js","services/utilsService.js","components/common/nav.jsx","components/hoc/withAuth.jsx","context.js","components/sideMenu.jsx","services/clientService.js","services/userService.js","hooks/useReport.js","components/menus/dashboard/charts.jsx","components/menus/dashboard/index.jsx","components/common/input.jsx","components/common/form.jsx","components/menus/client/addFs.jsx","components/menus/client/addgpa.jsx","components/menus/branch/new.jsx","components/common/tableHeader.jsx","components/common/tableBody.jsx","components/common/table.jsx","components/menus/branch/tableBranch.jsx","components/common/spinner.jsx","components/menus/branch/index.jsx","hooks/useBranches.js","components/common/paginate.jsx","components/common/modal.jsx","components/common/searchForm.jsx","components/menus/users/index.jsx","components/common/modalEnforced.jsx","components/common/modalApproved.jsx","components/menus/reports/index.jsx","components/common/footer.jsx","hooks/usePagination.js","hooks/types.js","providers/userProvider.jsx","providers/clientProvider.jsx","components/menus/users/view.jsx","components/menus/users/edit.jsx","components/menus/users/new.jsx","components/menus/branch/edit.jsx","components/menus/client/edit.jsx","components/home.jsx","components/common/logo.jsx","components/auth/login.jsx","components/auth/signUp.jsx","components/common/notFound.jsx","components/common/authRoute.jsx","components/common/guestRoute.jsx","routes.jsx","App.js","index.js"],"names":["axios","interceptors","response","use","error","data","status","name","toast","Promise","reject","console","log","throwError","request","config","baseURL","process","API_URL","apiUrl","httpService","get","post","put","delete","sendJwt","_ref","token","headers","Authorization","concat","saveJwt","refreshToken","localStorage","setItem","_callee","user","regenerator_default","a","wrap","_context","prev","next","http","then","jwt","abrupt","sent","stop","this","_callee2","_ref2","_context2","getDecodeToken","getItem","Object","objectSpread","jwtDecode","ex","authService","login","signUp","logout","removeItem","getCurrentUser","isUsernameTaken","username","isEmailTaken","email","isValidUser","isAdmin","position","isAdminOrManager","sortBy","items","sortColumn","_","orderBy","path","order","toElipse","str","end","arguments","length","undefined","x","substring","hasElipse","formatDate","date","Date","toLocaleDateString","joiLettersOnly","label","Joi","string","required","regex","errors","forEach","err","type","message","mapToSelect","id","cap","value","startCase","Nav","props","react_default","createElement","Fragment","className","style","color","theme","secondary","auth","NavLink","to","href","onClick","jsx","withAuth","Component","assign","UserContext","React","createContext","ClientContext","objectWithoutProperties","_useState","useState","_useState2","slicedToArray","toggle","setToggle","_useContext","useContext","unverify","state","onSetStatus","_useContext2$status","total","forApproval","lapsed","nearExpiration","reportMenu","due","Link","data-toggle","title","children","addClient","client","getStatus","getClient","approved","codeNo","updateClient","enforced","cancelled","retrieved","getBranches","_x","_getBranches","apply","url","isMap","_args2","branches","map","branch","updateBranch","addManager","_x2","_addManager","_callee3","_context3","editUser","_x3","_x4","_editUser","_callee4","_context4","getManager","_x5","_getManager","_callee5","branchId","_context5","fullname","getPagedUsers","num","limit","search","getUser","useReport","reports","setReports","_useState3","_useState4","refresh","setRefresh","_useState5","_useState6","isLoaded","setIsLoaded","useEffect","report","archived","clients","Charts","dimension","_useReport","_useReport$reports","statistic","setStatistic","fsf","year","palette","chart","xaxis","categories","text","align","margin","offsetX","offsetY","floating","fontSize","grid","show","borderColor","strokeDashArray","lines","yaxis","row","colors","opacity","column","padding","top","right","bottom","left","optionsSales","_useState7","_useState8","optionsFSF","lastname","firstname","middlename","expiredDate","react_apexcharts_min_default","key","options","series","width","isSales","history","replace","charts","Input","_ref$icon","icon","rest","htmlFor","Form","isDisable","setIsDisable","setData","setErrors","schema","validate","abortEarly","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","details","Symbol","iterator","done","item","return","handleChange","_ref4","input","currentTarget","_errors","errorMessage","_ref3","obj","defineProperty","_schema","validateProperty","newErrors","checkConfirmPassword","password","_data","onSubmit","e","doSubmit","preventDefault","catch","handleSubmit","renderButton","labelLoading","isBlock","renderInput","common_input","onChange","renderTextArea","rows","renderDatePicker","es","peekNextMonth","showMonthDropdown","showYearDropdown","dropdownMode","placeholderText","onBlur","renderSelect","react_select_esm","isSearchable","isClearable","selectData","renderCheckbox","checked","AddClient","onAddClient","address","contact","birthdate","dateInsured","now","userInsured","gender","mode","civil","setClient","selectedGender","setSelectedGender","selectedMode","setSelectedMode","selectedCivil","setSelectedCivil","_useState9","_useState10","optional","min","max","handleChangeGender","handleChangeCivil","handleChangeMode","getExpiredDate","setMonth","getMonth","getAddedMonth","asyncToGenerator","mark","_client","toISOString","success","t0","genders","civils","modes","handleDateInsured","handleBirthdate","common_form","target","AddGPA","coverage","selectedCoverage","setSelectedCoverage","number","handleChangeCoverage","isGPA","coverages","AddBranch","onRefresh","setBranch","handleCheckUser","keys","_ref5","_ref6","isTaken","_ref7","TableHeader","columns","i","onSort","raiseSort","renderSortIcon","TableBody","content","renderCell","Table","tableHeader","tableBody","TableBranch","setBranches","setSortColumn","table","b","manager","Spinner","_ref$width","_ref$heigth","heigth","_ref$color","_ref$duration","duration","_ref$isLoaded","version","height","viewBox","cx","cy","r","fill","fillOpacity","transform","attributeName","values","calcMode","dur","repeatCount","Branch","_useBranches","useBranches","spinner","tableBranch","Paginate","PAGE_NUMBERS","pagination","pageNumbers","_useContext$state","pageNum","pages","start","onPageChange","onSetStart","onSetEnd","handleDecrementStart","handleDecrementEnd","handlePageChange","_pageNum","doNext","isNavHidden","isFirstDisabled","isLastDisabled","aria-label","arr","push","createArray","CustomModal","primary","modal","Modal","isOpen","ModalHeader","ModalBody","ModalFooter","SearchForm","handleSearch","_ref$placeholder","placeholder","setSearch","users","notFound","onDelete","onSearch","selectedUser","setSelectedUser","profile","toggleDelete","setModal","modalDelete","setModalDelete","doDelete","_ref8","_ref10","_ref9","common_modal","searchForm","paginate","setMode","setCodeNo","match","Reports","params","onApproved","onCancelled","onRetrieved","onEnforced","calculateAge","ageDif","getTime","ageDate","Math","abs","getUTCFullYear","enforcedCol","forApprovalCol","toggleApproved","lapsedCol","toggleEnforced","nearExpirationCol","cancelledCol","gpaCol","archivedCol","modalEnforced","setModalEnforced","modalApproved","setModalApproved","common_modalEnforced","renderModalEnforced","common_modalApproved","Footer","reducer","action","payload","usePagination","_ref$data","_ref$pages","_ref$total","_ref$take","take","initialState","_useReducer","useReducer","_useReducer2","_useReducer2$","dispatch","memo","_usePagination","perPage","_usePagination$state","handleDelete","originalUsers","_users","toConsumableArray","filter","Provider","ClientProvider","setStatus","handleAddClient","t1","handleApproved","handleCancelled","handleRetrieved","handleEnforced","_x6","handleGetClient","_callee6","_context6","_x7","handleUpdateClient","_callee7","_context7","_x8","_x9","onUpdateClient","ViewUser","setUser","backgroundColor","src","appUrl","alt","setSelectedPosition","setSelectedBranch","branch_id","agents","selectedPosition","selectedBranch","_useState11","_useState12","handleChangePosition","handleChangeBranch","isAgent","isDisabled","disabled","confirmPassword","hasBranches","setHasBranches","fetchBranches","valid","ref","language","any","allowOnly","EditBranch","getBranch","_ref$branch","EditClient","_ref$client","Home","menu","sub","userProvider","clientProvider","minHeight","sideMenu","role","addFs","addgpa","dashboard","branch_edit","branch_new","menus_branch","view","edit","users_new","menus_users","menus_reports","client_edit","footer","Logo","logo","NotFound","_ref$isAdminOrManager","_ref$isAdmin","component","render","Route","Redirect","pathname","from","location","Routes","Switch","authRoute","home","guestRoute","auth_login","SignUp","exact","App","nav","lib","autoClose","routes","ReactDOM","BrowserRouter","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.cf7f8ec4.chunk.js","sourcesContent":["import axios from 'axios'\r\nimport { toast } from 'react-toastify'\r\nimport { apiUrl } from '../config.json'\r\n\r\naxios.interceptors.response.use(\r\n  response => response,\r\n  error => {\r\n    return throwError(error)\r\n  }\r\n)\r\n\r\naxios.interceptors.request.use(config => {\r\n  config.baseURL = process.env.API_URL || apiUrl\r\n  return config\r\n})\r\n\r\nfunction sendJwt({ token }) {\r\n  axios.interceptors.request.use(config => {\r\n    config.headers.Authorization = `Bearer ${token}`\r\n\r\n    return config\r\n  })\r\n}\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n  axios,\r\n  sendJwt\r\n}\r\n\r\nfunction throwError(error) {\r\n  if (\r\n    error.response &&\r\n    error.response.data.status &&\r\n    error.response.data.status.name === 'ExpiredJwtToken'\r\n  ) {\r\n    toast.error('Please Logout!')\r\n    return Promise.reject(error)\r\n  }\r\n\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500\r\n  if (!expectedError) {\r\n    toast.error('An unexpected error occurrred.')\r\n    console.log(error)\r\n  }\r\n\r\n  return Promise.reject(error)\r\n\r\n  // if (error.response && error.response.data.status.name === 'ExpiredJwtToken') {\r\n  //   if (!isRefreshing) {\r\n  //     isRefreshing = true\r\n  //     axios.interceptors.request.use(config => {\r\n  //       config.headers.Authorization = `Bearer ${localStorage.getItem(\r\n  //         'access-token'\r\n  //       )}`\r\n\r\n  //       return config\r\n  //     })\r\n  //     axios\r\n  //       .post('/token/refresh', {\r\n  //         refreshToken: localStorage.getItem('refresh-token')\r\n  //       })\r\n  //       .then((data,x) => {\r\n  //         console.log(data,x)\r\n  //         // saveJwt(data.data.jwt)\r\n  //         isRefreshing = false\r\n  //       })\r\n  //   }\r\n  //   return config\r\n  // }\r\n}\r\n","import http from './httpService'\r\nimport jwtDecode from 'jwt-decode'\r\n\r\nfunction saveJwt({ token, refreshToken }) {\r\n  localStorage.setItem('access-token', token)\r\n  localStorage.setItem('refresh-token', refreshToken)\r\n}\r\n\r\nasync function login(user) {\r\n  return await http.post('/auth/login', user).then(data => {\r\n    saveJwt(data.data.jwt)\r\n  })\r\n}\r\n\r\nasync function signUp(user) {\r\n  const { jwt } = await http.post('/auth/sign-up', user).then(data => data.data)\r\n\r\n  // if (!jwt) return false\r\n\r\n  // saveJwt(jwt)\r\n  // return true\r\n  return false\r\n}\r\nfunction logout() {\r\n  http.sendJwt(jwt())\r\n  removeTokens()\r\n  http.post('/token/revoke', { refreshToken: jwt().refreshToken })\r\n}\r\n\r\nfunction removeTokens() {\r\n  localStorage.removeItem('refresh-token')\r\n  localStorage.removeItem('access-token')\r\n}\r\n\r\nfunction getDecodeToken() {\r\n  try {\r\n    const token = localStorage.getItem('access-token')\r\n    return { ...jwtDecode(token) }\r\n  } catch (ex) {\r\n    return null\r\n  }\r\n}\r\n\r\nconst getCurrentUser = () =>\r\n  getDecodeToken() ? { ...getDecodeToken().data } : null\r\n\r\nconst isValidUser = () => (getDecodeToken() ? true : false)\r\n\r\nconst isAdminOrManager = () => {\r\n  const position = getDecodeToken().data.position\r\n\r\n  return position === 'manager' || position === 'admin'\r\n}\r\n\r\nconst isAdmin = () => {\r\n  const position = getDecodeToken().data.position\r\n\r\n  return position === 'admin'\r\n}\r\n\r\nfunction isUsernameTaken(username) {\r\n  return http.get('/auth/is-taken?username=' + username).then(data => data.data)\r\n}\r\n\r\nfunction isEmailTaken(email) {\r\n  return http.get('/auth/is-taken?email=' + email).then(data => data.data)\r\n}\r\n\r\nconst jwt = () => {\r\n  return {\r\n    token: localStorage.getItem('access-token'),\r\n    refreshToken: localStorage.getItem('refresh-token')\r\n  }\r\n}\r\n\r\nexport default {\r\n  login,\r\n  signUp,\r\n  logout,\r\n  getCurrentUser,\r\n  isUsernameTaken,\r\n  isEmailTaken,\r\n  jwt,\r\n  isValidUser,\r\n  isAdmin,\r\n  isAdminOrManager\r\n}\r\n","import _ from 'lodash'\r\nimport Joi from 'joi-browser'\r\n\r\nexport function sortBy(items, sortColumn) {\r\n  return _.orderBy(items, [sortColumn.path], [sortColumn.order])\r\n}\r\n\r\nexport function toElipse(str, end = 20) {\r\n  const x = str.substring(0, end)\r\n  const hasElipse = str.length > end ? '...' : ''\r\n  return `${x} ${hasElipse}`\r\n}\r\n\r\nexport const formatDate = date => {\r\n  return date ? new Date(date).toLocaleDateString() : null\r\n}\r\n\r\nexport const createArray = (start, end) => {\r\n  let arr = []\r\n  for (let i = start; i <= end; i++) {\r\n    arr.push(i)\r\n  }\r\n  return arr\r\n}\r\n\r\nexport const joiLettersOnly = label => {\r\n  return Joi.string()\r\n    .required()\r\n    .regex(/^[A-Za-z\\s]*$/)\r\n    .error(errors => {\r\n      errors.forEach(err => {\r\n        switch (err.type) {\r\n          case 'any.empty':\r\n            err.message = `\"${label}\" is not allowed to be empty`\r\n            break\r\n          case 'string.regex.base':\r\n            err.message = `\"${label}\" must NOT have a number or special character`\r\n            break\r\n          default:\r\n            break\r\n        }\r\n      })\r\n      return errors\r\n    })\r\n    .label(label)\r\n}\r\n\r\nexport const mapToSelect = ({ id, name }) => {\r\n  return { id, label: cap(name), value: name }\r\n}\r\n\r\nexport const cap = str => _.startCase(str)\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport auth from '../../services/authService'\r\nimport { cap } from '../../services/utilsService'\r\nimport { theme } from '../../config.json'\r\n\r\nconst Nav = props => {\r\n  const handleLogout = () => {\r\n    auth.logout()\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n        <div className=\"container\">\r\n          <h6 className=\"text-white mt-1\">\r\n            <span style={{ color: theme.secondary }}>COCOLIFE </span>: Hybrid\r\n            Management Information System with SMS Notification\r\n          </h6>\r\n\r\n          <div\r\n            className=\"collapse navbar-collapse d-flex justify-content-end\"\r\n            id=\"navbarNav\"\r\n          >\r\n            <ul className=\"navbar-nav\">\r\n              {auth.isValidUser() && (\r\n                <React.Fragment>\r\n                  <li className=\"nav-item ml-1\">\r\n                    <NavLink\r\n                      className=\"nav-link active\"\r\n                      to={`/users/${auth.getCurrentUser().id}`}\r\n                    >\r\n                      {cap(auth.getCurrentUser().username) +\r\n                        ' | ' +\r\n                        cap(auth.getCurrentUser().position)}\r\n                    </NavLink>\r\n                  </li>\r\n                  <li className=\"nav-item\">\r\n                    <a\r\n                      href=\"/login\"\r\n                      className=\"nav-link\"\r\n                      onClick={handleLogout}\r\n                    >\r\n                      Logout\r\n                    </a>\r\n                  </li>\r\n                </React.Fragment>\r\n              )}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <style jsx=\"\">{`\r\n          .navbar {\r\n            margin-bottom: 20px;\r\n          }\r\n          .fa {\r\n            margin-top: 12px !important;\r\n          }\r\n\r\n          i {\r\n            cursor: pointer;\r\n          }\r\n        `}</style>\r\n      </nav>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Nav\r\n","import React from 'react'\r\nimport auth from '../../services/authService'\r\n\r\nconst withAuth = Component => {\r\n  return props => {\r\n    return <Component auth={auth} {...props} />\r\n  }\r\n}\r\n\r\nexport default withAuth\r\n","import React from 'react'\r\n\r\nexport const UserContext = React.createContext({})\r\n\r\nexport const ClientContext = React.createContext({})\r\n","import React, { useState, useContext } from 'react'\r\nimport withAuth from './hoc/withAuth'\r\nimport { NavLink, Link } from 'react-router-dom'\r\nimport { theme } from './../config.json'\r\nimport { UserContext, ClientContext } from './../context'\r\n\r\nconst SideMenu = ({ auth, ...props }) => {\r\n  const [toggle, setToggle] = useState(false)\r\n\r\n  const {\r\n    state: { unverify },\r\n    onSetStatus\r\n  } = useContext(UserContext)\r\n\r\n  const {\r\n    status: { total, forApproval, lapsed, nearExpiration, due }\r\n  } = useContext(ClientContext)\r\n\r\n  const reportMenu = (name, label, value) => {\r\n    return (\r\n      <Link\r\n        onClick={() => setToggle(false)}\r\n        className=\"dropdown-item\"\r\n        to={`/reports/${name}`}\r\n      >\r\n        {label}\r\n        <span className=\"badge badge-sm badge-secondary ml-2 mt-0\">\r\n          {value ? value : ''}\r\n        </span>\r\n      </Link>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <nav className=\"side-menu col-md-2 d-none d-md-block bg-dark mr-0 pt-3\">\r\n        <ul className=\"nav flex-column mb-2 mt-2 pr-0\">\r\n          <li className=\"nav-item\">\r\n            <NavLink\r\n              onClick={() => setToggle(false)}\r\n              name=\"dashboard\"\r\n              to=\"/dashboard\"\r\n              className={`nav-link text-white `}\r\n            >\r\n              {/* <span className=\"fa fa-line-chart mr-2\"></span> */}\r\n              Dashboard\r\n            </NavLink>\r\n          </li>\r\n          {auth.isAdmin() && (\r\n            <li className=\"nav-item\">\r\n              <NavLink\r\n                onClick={() => setToggle(false)}\r\n                name=\"branch\"\r\n                to=\"/branches\"\r\n                className={`nav-link text-white`}\r\n              >\r\n                {/* <span className=\"fa fa-node\"></span> Branch */}\r\n                Branch\r\n              </NavLink>\r\n            </li>\r\n          )}\r\n\r\n          {auth.isAdminOrManager() && (\r\n            <li className=\"nav-item\">\r\n              <div className=\"row \">\r\n                <div className=\"d-flex ml-3\">\r\n                  <NavLink\r\n                    onClick={() => {\r\n                      setToggle(false)\r\n                      onSetStatus(null)\r\n                    }}\r\n                    to=\"/users\"\r\n                    className={`nav-link text-white pr-1`}\r\n                  >\r\n                    Users\r\n                  </NavLink>\r\n                </div>\r\n                <div className=\"m-0 p-0\">\r\n                  <Link\r\n                    data-toggle=\"tooltip\"\r\n                    title={`You have ${unverify} unverify user/s!`}\r\n                    onClick={() => {\r\n                      setToggle(false)\r\n                      onSetStatus(0)\r\n                    }}\r\n                    to=\"/users\"\r\n                    className={`nav-link text-white pt-0 pl-0`}\r\n                  >\r\n                    <span className=\"badge badge-sm badge-danger ml-1\">\r\n                      {unverify ? unverify : ''}\r\n                    </span>\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </li>\r\n          )}\r\n\r\n          <li className=\"nav-item\">\r\n            <div className=\"row\">\r\n              <div className=\"d-flex ml-3\">\r\n                <a\r\n                  onClick={() => setToggle(!toggle)}\r\n                  className=\"nav-link text-white pr-1\"\r\n                >\r\n                  Reports\r\n                  <span\r\n                    className={`fa fa-angle-${!toggle ? 'down' : 'up'} ml-1`}\r\n                  ></span>\r\n                </a>\r\n              </div>\r\n              <div className=\"m-0 p-0\">\r\n                <a\r\n                  data-toggle=\"tooltip\"\r\n                  title={`You have ${total} client reports!`}\r\n                  className={`nav-link text-white pt-1 pl-0`}\r\n                >\r\n                  <span className=\"badge badge-sm badge-danger ml-1\">\r\n                    {total ? total : ''}\r\n                  </span>\r\n                </a>\r\n              </div>\r\n            </div>\r\n\r\n            {toggle && (\r\n              <div className=\"dropdown\">\r\n                {reportMenu('for-approval', 'For Approval', forApproval)}\r\n                {reportMenu(\r\n                  'near-expiration',\r\n                  'Near Expiration',\r\n                  nearExpiration\r\n                )}\r\n\r\n                {reportMenu('lapsed', 'Lapsed Policy', lapsed)}\r\n                <hr className=\"mx-2\" />\r\n                {reportMenu('enforced', 'Enforced Client')}\r\n                {reportMenu('gpa', 'GPA')}\r\n                {reportMenu('cancelled', 'Cancelled Policy')}\r\n                {auth.isAdminOrManager() && (\r\n                  <React.Fragment>\r\n                    <hr className=\"mx-2\" />\r\n\r\n                    {reportMenu('user-archived', 'User Archived')}\r\n                  </React.Fragment>\r\n                )}\r\n              </div>\r\n            )}\r\n          </li>\r\n        </ul>\r\n\r\n        <style jsx=\"\">{`\r\n          .badge-danger {\r\n            margin-top: -5px;\r\n          }\r\n          .active {\r\n            color: ${theme.secondary} !important;\r\n            cursor: hand;\r\n          }\r\n          .nav-link {\r\n            cursor: pointer;\r\n          }\r\n          a:hover {\r\n            color: #ddd !important;\r\n          }\r\n\r\n          hr {\r\n            margin-top: 3;\r\n            border: 0.5px solid gray;\r\n          }\r\n          .side-menu {\r\n            border-radius: 5px 0 0 0;\r\n          }\r\n          .dropdown {\r\n            margin-left: 30px;\r\n            padding-right: 0 !important;\r\n            background-color: white;\r\n            z-index: 2 !important;\r\n            border-radius: 3px !important;\r\n            padding-top: 10px;\r\n\r\n            padding-bottom: 10px;\r\n            border: 1px solid #343a40;\r\n          }\r\n          .dropdown-item {\r\n            font-size: 14px;\r\n          }\r\n          .dropdown-item:hover {\r\n            color: gray !important;\r\n          }\r\n        `}</style>\r\n      </nav>\r\n      {props.children}\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default withAuth(SideMenu)\r\n","import http from './httpService'\r\nimport auth from './authService'\r\nimport { mapToSelect } from './utilsService'\r\n\r\nexport function addClient(client) {\r\n  return http.post('/api/clients', client).then(data => data.data)\r\n}\r\n\r\nexport function getStatus() {\r\n  http.sendJwt(auth.jwt())\r\n  return http.get('/api/clients/status').then(data => data.data)\r\n}\r\n\r\nexport function getClients(report) {\r\n  http.sendJwt(auth.jwt())\r\n  return http.get('/api/clients/' + report).then(data => data.data.clients)\r\n}\r\n\r\nexport function getClient(id) {\r\n  http.sendJwt(auth.jwt())\r\n  return http.get('/api/clients/show/' + id).then(data => data.data)\r\n}\r\n\r\nexport function approved(id, codeNo) {\r\n  http.sendJwt(auth.jwt())\r\n  return http.put('/api/clients/approved/' + id, { codeNo }).then(data => data)\r\n}\r\n\r\nexport function getStatistics(year) {\r\n  http.sendJwt(auth.jwt())\r\n  return http\r\n    .post('/api/clients/statistic/', { year })\r\n    .then(data => data.data.statistic)\r\n}\r\n\r\nexport function updateClient(id, client) {\r\n  http.sendJwt(auth.jwt())\r\n  return http.put('/api/clients/edit/' + id, client).then(data => data)\r\n}\r\n\r\nexport function enforced(client) {\r\n  http.sendJwt(auth.jwt())\r\n  return http\r\n    .put('/api/clients/enforced/' + client.id, { ...client })\r\n    .then(data => data)\r\n}\r\n\r\nexport function cancelled(id) {\r\n  http.sendJwt(auth.jwt())\r\n\r\n  return http.put('/api/clients/cancelled/' + id, {}).then(data => data)\r\n}\r\n\r\nexport function retrieved(id) {\r\n  http.sendJwt(auth.jwt())\r\n\r\n  return http.put('/api/clients/retrieved/' + id, {}).then(data => data)\r\n}\r\n","import http from './httpService'\r\nimport auth from './authService'\r\nimport { mapToSelect } from './utilsService'\r\n\r\nexport async function getPositions() {\r\n  return await http\r\n    .get('/api/positions')\r\n    .then(data => data.data)\r\n    .then(({ positions }) => {\r\n      return positions.map(position => {\r\n        return mapToSelect(position)\r\n      })\r\n    })\r\n}\r\n\r\nexport async function getBranches(url, isMap = false) {\r\n  return await http\r\n    .get(url)\r\n    .then(data => data.data)\r\n    .then(({ branches }) => {\r\n      return isMap\r\n        ? branches\r\n        : branches.map(branch => {\r\n            return mapToSelect(branch)\r\n          })\r\n    })\r\n}\r\n\r\nexport function isBranchTaken(name) {\r\n  return http.get('/api/branches/is-taken?name=' + name).then(data => data.data)\r\n}\r\n\r\nexport function addBranch(branch) {\r\n  return http.post('/api/branches', branch).then(data => data.data)\r\n}\r\n\r\nexport function getBranch(id) {\r\n  return http.get('/api/branches/show/' + id).then(data => data.data)\r\n}\r\n\r\nexport function updateBranch(id, branch) {\r\n  return http.put('/api/branches/edit/' + id, branch).then(data => data.data)\r\n}\r\n\r\nexport async function addManager(user) {\r\n  http.sendJwt(auth.jwt())\r\n  return await http.post('/api/users', user).then(data => data.data)\r\n}\r\n\r\nexport async function editUser(id, user) {\r\n  http.sendJwt(auth.jwt())\r\n  return await http.put('/api/users/' + id, user).then(data => data.data)\r\n}\r\n\r\nexport async function getManager(branchId) {\r\n  // http.setJwt(auth.jwt())\r\n  return await http\r\n    .get(`/api/branches/managers/${branchId}`)\r\n    .then(data => data.data.fullname)\r\n}\r\n\r\nexport function getPagedUsers(num, limit, search = '', status) {\r\n  http.sendJwt(auth.jwt())\r\n  return http\r\n    .get(\r\n      `/api/users/page/${num}?limit=${limit}&status=${status}&search=${search}`\r\n    )\r\n    .then(data => data.data.data)\r\n}\r\n\r\nexport function verifyUser(id) {\r\n  http.sendJwt(auth.jwt())\r\n  return http.get(`/api/users/status/${id}`).then(data => data.data.data)\r\n}\r\n\r\nexport function archivedUser() {\r\n  http.sendJwt(auth.jwt())\r\n  return http.get(`/api/users/archived`).then(data => data.data.archived)\r\n}\r\n\r\nexport function statusCount() {\r\n  http.sendJwt(auth.jwt())\r\n  return http.get(`/api/users/status-count`).then(data => data.data.data)\r\n}\r\n\r\nexport function getUser(id) {\r\n  http.sendJwt(auth.jwt())\r\n  return http.get(`/api/users/${id}`).then(data => data.data.user)\r\n}\r\n\r\nexport function getUnverifyUser() {\r\n  http.sendJwt(auth.jwt())\r\n  return http.get(`/api/users/unverify`).then(data => data.data.unverify)\r\n}\r\n\r\nexport function deleteUser(id) {\r\n  http.sendJwt(auth.jwt())\r\n  return http.delete(`/api/users/${id}`).then(data => data.data)\r\n}\r\n\r\nexport function restoreUser(id) {\r\n  http.sendJwt(auth.jwt())\r\n  return http.get(`/api/users/restore/${id}`).then(data => data.data)\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { getClients } from '../services/clientService'\r\nimport { archivedUser } from '../services/userService'\r\n\r\nexport default name => {\r\n  const [reports, setReports] = useState([])\r\n  const [refresh, setRefresh] = useState(false)\r\n  const [isLoaded, setIsLoaded] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setReports([])\r\n    setIsLoaded(false)\r\n\r\n    if (name === 'user-archived') {\r\n      archivedUser().then(reports => {\r\n        setReports(reports)\r\n\r\n        setIsLoaded(true)\r\n      })\r\n    } else {\r\n      getClients(name).then(reports => {\r\n        setReports(reports)\r\n        setIsLoaded(true)\r\n      })\r\n    }\r\n  }, [name, refresh])\r\n  return { reports, setRefresh, setReports, isLoaded }\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport Chart from 'react-apexcharts'\r\nimport { theme } from '../../../config.json'\r\nimport useReport from '../../../hooks/useReport'\r\nimport { formatDate } from '../../../services/utilsService'\r\nimport { getStatistics } from '../../../services/clientService'\r\n\r\nconst Charts = ({ dimension = 400 }) => {\r\n  const { reports = [], isLoaded } = useReport('near-expiration')\r\n\r\n  const [statistic, setStatistic] = useState([\r\n    {\r\n      name: 'series-1',\r\n      data: []\r\n    }\r\n  ])\r\n\r\n  const [fsf, setFsf] = useState([\r\n    {\r\n      name: 'series-1',\r\n      data: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n    }\r\n  ])\r\n\r\n  useEffect(() => {\r\n    getStatistics().then(data => {\r\n      setStatistic([{ name: 'series-1', data }])\r\n    })\r\n  }, [])\r\n\r\n  const [optionsSales, setOptionsSales] = useState({\r\n    theme: {\r\n      palette: 'palette6'\r\n    },\r\n    chart: {\r\n      id: 'basic-bar'\r\n    },\r\n    xaxis: {\r\n      categories: [\r\n        'jan',\r\n        'feb',\r\n        'mar',\r\n        'apr',\r\n        'may',\r\n        'jun',\r\n        'jul',\r\n        'aug',\r\n        'sep',\r\n        'oct',\r\n        'nov',\r\n        'dec'\r\n      ]\r\n    },\r\n    title: {\r\n      text: '2019 Client Statistic',\r\n      align: 'center',\r\n      margin: 0,\r\n      offsetX: 0,\r\n      offsetY: 0,\r\n      floating: false,\r\n      style: {\r\n        fontSize: '20px',\r\n        color: theme.secondary\r\n      }\r\n    },\r\n    grid: {\r\n      show: true,\r\n      borderColor: 'black',\r\n      strokeDashArray: 1,\r\n      position: 'back',\r\n      xaxis: {\r\n        lines: {\r\n          show: false\r\n        }\r\n      },\r\n      yaxis: {\r\n        lines: {\r\n          show: false\r\n        }\r\n      },\r\n      row: {\r\n        colors: undefined,\r\n        opacity: 0.5\r\n      },\r\n      column: {\r\n        colors: undefined,\r\n        opacity: 0.5\r\n      },\r\n      padding: {\r\n        top: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        left: 0\r\n      }\r\n    }\r\n  })\r\n\r\n  const [optionsFSF, setOptionsFSF] = useState({\r\n    theme: {\r\n      palette: 'palette6'\r\n    },\r\n    chart: {\r\n      id: 'basic-bar'\r\n    },\r\n    xaxis: {\r\n      categories: [\r\n        'jan',\r\n        'feb',\r\n        'mar',\r\n        'apr',\r\n        'may',\r\n        'jun',\r\n        'jul',\r\n        'aug',\r\n        'sep',\r\n        'oct',\r\n        'nov',\r\n        'dec'\r\n      ]\r\n    },\r\n    title: {\r\n      text: 'Total FSF',\r\n      align: 'center',\r\n      margin: 10,\r\n      offsetX: 0,\r\n      offsetY: 0,\r\n      floating: false,\r\n      style: {\r\n        fontSize: '20px',\r\n        color: theme.secondary\r\n      }\r\n    },\r\n    grid: {\r\n      show: true,\r\n      borderColor: 'black',\r\n      strokeDashArray: 1,\r\n      position: 'back',\r\n      xaxis: {\r\n        lines: {\r\n          show: false\r\n        }\r\n      },\r\n      yaxis: {\r\n        lines: {\r\n          show: false\r\n        }\r\n      },\r\n      row: {\r\n        colors: undefined,\r\n        opacity: 0.5\r\n      },\r\n      column: {\r\n        colors: undefined,\r\n        opacity: 0.5\r\n      },\r\n      padding: {\r\n        top: 0,\r\n        right: 0,\r\n        bottom: 0,\r\n        left: 0\r\n      }\r\n    }\r\n  })\r\n\r\n  const chart = () => (\r\n    <React.Fragment>\r\n      <div className=\"row d-flex justify-content-around\">\r\n        <ul className=\"list-group\">\r\n          <li className=\"header-list pb-0 list-group-item d-flex justify-content-between align-items-center\">\r\n            <span className=\"font-weight-bold\">Client Near Expiration</span>\r\n            <span className=\"badge badge-danger badge-pill\">\r\n              {reports.length ? reports.length : ''}\r\n            </span>\r\n          </li>\r\n          <li className=\"header-list py-1 list-group-item d-flex justify-content-between align-items-center\">\r\n            <span className=\"font-weight-light\">Name</span>\r\n            <span className=\"font-weight-light\">Due Date</span>\r\n          </li>\r\n          <div className=\"wrapper-list\">\r\n            {reports.map(client => (\r\n              <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                {`${client.lastname}, ${client.firstname} ${client.middlename}`}\r\n\r\n                <span className=\"badge badge-warning badge-pill\">\r\n                  {formatDate(client.expiredDate)}\r\n                </span>\r\n              </li>\r\n            ))}\r\n            {reports.length === 0 && isLoaded && (\r\n              <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n                No record/s found!\r\n              </li>\r\n            )}\r\n          </div>\r\n        </ul>\r\n\r\n        <ul className=\"list-group\">\r\n          <li className=\"header-list pb-0 list-group-item d-flex justify-content-between align-items-center\">\r\n            <span className=\"font-weight-bold\">SPIF</span>\r\n          </li>\r\n          <li className=\"header-list py-1 list-group-item d-flex justify-content-between align-items-center\">\r\n            <span className=\"font-weight-light\">Tab</span>\r\n            <span className=\"font-weight-light\">Tab</span>\r\n          </li>\r\n          <li className=\"list-group-item d-flex justify-content-between align-items-center\">\r\n            No record/s found!\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <div className=\"row d-flex justify-content-around\">\r\n        <Chart\r\n          key=\"Sales\"\r\n          type=\"line\"\r\n          options={optionsSales}\r\n          series={statistic}\r\n          width=\"400px\"\r\n        />\r\n        <Chart\r\n          key=\"FSF\"\r\n          type=\"line\"\r\n          options={optionsFSF}\r\n          series={fsf}\r\n          width=\"400px\"\r\n        />\r\n      </div>\r\n      <style jsx=\"\">{`\r\n        .list-group {\r\n          width: 400px !important;\r\n        }\r\n        .header-list {\r\n          background-color: ${theme.secondary};\r\n          border-color: ${theme.secondary};\r\n          color: white;\r\n        }\r\n\r\n        .wrapper-list {\r\n          margin: 0;\r\n          padding: 0;\r\n          height: 180px;\r\n          overflow-y: auto;\r\n          overflow-x: hidden;\r\n        }\r\n      `}</style>\r\n    </React.Fragment>\r\n  )\r\n\r\n  return <div>{chart()}</div>\r\n}\r\n\r\nexport default Charts\r\n","import React from 'react'\r\n\r\nimport Charts from './charts'\r\nimport withAuth from '../../hoc/withAuth'\r\nimport { cap } from './../../../services/utilsService'\r\n\r\nconst Dashboard = ({ auth, ...props }) => {\r\n  const { position } = auth.getCurrentUser()\r\n\r\n  const isSales = position === 'sales'\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-2 mb-3 border-bottom\">\r\n        <h1 className=\"h2\">Dashboard</h1>\r\n        {!isSales && auth.getCurrentUser().position !== 'admin' && (\r\n          <div>\r\n            <button\r\n              onClick={() => props.history.replace('/dashboard/new-fs')}\r\n              className=\"btn btn-sm btn-grad-secondary\"\r\n            >\r\n              <span className=\"fa fa-plus mr-1\"></span>\r\n              FUTURE SAVINGS\r\n            </button>\r\n            <button\r\n              onClick={() => props.history.replace('/dashboard/new-gpa')}\r\n              className=\"btn btn-sm btn-grad-secondary  ml-2\"\r\n            >\r\n              <span className=\"fa fa-plus mr-1\"></span>\r\n              GPA FORM\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col-12 mt-3\">\r\n          <Charts></Charts>\r\n        </div>\r\n      </div>\r\n\r\n      <style jsx=\"\">{`\r\n        .fa-plus {\r\n          margin-top: 0 !important;\r\n        }\r\n      `}</style>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default withAuth(Dashboard)\r\n","import React from 'react'\n\nconst Input = ({ name, label, error, icon = '', ...rest }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <div className=\"input-group mb-2\">\n        <div className=\"input-group-prepend\">\n          <div className=\"input-group-text p-0\">\n            {icon && <span className={`fa ${icon} p-0 m-2`}></span>}\n          </div>\n        </div>\n        <input {...rest} name={name} id={name} className=\"form-control\" />\n      </div>\n      {/* {error && <div className=\"alert p-2 mt-2 alert-danger\">{error}</div>} */}\n      {error && <p className=\"error-message text-danger p-1\">{error}</p>}\n      <style jsx=\"\">{`\n        .error-message {\n          font-size: 13px;\n        }\n      `}</style>\n    </div>\n  )\n}\n\nexport default Input\n","import React, { useState } from 'react'\r\nimport Joi from 'joi-browser'\r\nimport Input from './input'\r\nimport DatePicker from 'react-datepicker'\r\nimport Select from 'react-select'\r\n\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\n\r\nconst Form = props => {\r\n  const [isDisable, setIsDisable] = useState(false)\r\n\r\n  const { data, setData } = props.data || {}\r\n  const { errors, setErrors } = props.errors || {}\r\n  const schema = { ...props.schema }\r\n\r\n  const validate = () => {\r\n    const options = { abortEarly: false }\r\n    const { error } = Joi.validate(data, schema, options)\r\n\r\n    if (!error) return null\r\n\r\n    const errors = {}\r\n    for (let item of error.details) errors[item.path[0]] = item.message\r\n    return errors\r\n  }\r\n\r\n  const validateProperty = ({ name, value }) => {\r\n    const obj = { [name]: value }\r\n\r\n    const _schema = { [name]: schema[name] }\r\n\r\n    const { error } = Joi.validate(obj, _schema)\r\n\r\n    return error ? error.details[0].message : null\r\n  }\r\n\r\n  const handleSubmit = (e, doSubmit) => {\r\n    e.preventDefault()\r\n\r\n    const errors = validate()\r\n    setErrors(errors || {})\r\n\r\n   // console.log(errors)\r\n    if (errors) return\r\n\r\n    setIsDisable(true)\r\n    doSubmit(e, data)\r\n      .then(() => setIsDisable(false))\r\n      .catch(() => setIsDisable(true))\r\n  }\r\n\r\n  const handleChange = ({ currentTarget: input }) => {\r\n    const _errors = { ...errors }\r\n    const errorMessage = validateProperty(input)\r\n\r\n    if (errorMessage) _errors[input.name] = errorMessage\r\n    else delete _errors[input.name]\r\n\r\n    const newErrors = checkConfirmPassword(input, _errors, data.password)\r\n\r\n    const _data = { ...data }\r\n    _data[input.name] = input.value\r\n\r\n    setData(_data)\r\n    setErrors(newErrors)\r\n  }\r\n\r\n  const checkConfirmPassword = (input, errors, password) => {\r\n    const newErrors = { ...errors }\r\n    if (input.name === 'confirmPassword') {\r\n      if (input.value === password) {\r\n        delete newErrors[input.name]\r\n      }\r\n    }\r\n    return newErrors\r\n  }\r\n\r\n  const renderInput = (name, label, type = 'text', icon, rest) => {\r\n    return (\r\n      <Input\r\n        type={type}\r\n        name={name}\r\n        value={data[name]}\r\n        label={label}\r\n        onChange={handleChange}\r\n        error={errors[name]}\r\n        icon={icon}\r\n        {...rest}\r\n      />\r\n    )\r\n  }\r\n\r\n  const renderCheckbox = (name, label, rest) => {\r\n    return (\r\n      <div className=\"form-check\">\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={data[name]}\r\n          name={name}\r\n          className=\"form-check-input\"\r\n          id={name}\r\n          {...rest}\r\n        />\r\n        <label className=\"form-check-label\" htmlFor={name}>\r\n          {label}\r\n        </label>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const renderSelect = (name, label, value, onChange, options, rest) => {\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label htmlFor={name}>{label}</label>\r\n        <Select\r\n          {...rest}\r\n          isSearchable\r\n          isClearable\r\n          value={value}\r\n          onBlur={() => {\r\n            const _errors = { ...errors }\r\n            delete _errors[name]\r\n            setErrors(_errors)\r\n          }}\r\n          onChange={selectData => {\r\n            onChange(selectData)\r\n\r\n            setData({\r\n              ...data,\r\n              [name]: selectData ? selectData.value : ''\r\n            })\r\n          }}\r\n          options={options}\r\n        />\r\n        {errors[name] && (\r\n          <p className=\"error-message text-danger p-1\">{errors[name]}</p>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const isButtonDisable = () =>\r\n    Object.keys(errors).length > 0 || validate() || isDisable\r\n\r\n  const renderButton = (label, icon, labelLoading = label, isBlock = false) => {\r\n    return (\r\n      <button\r\n        // disabled={isButtonDisable()}\r\n        className={`btn btn-grad-primary mt-3 ${isBlock ? 'btn-block' : ''}`}\r\n      >\r\n        <span className={`${icon} mr-1`} />\r\n        {isDisable ? labelLoading : label}\r\n      </button>\r\n    )\r\n  }\r\n\r\n  const renderDatePicker = (name, label, rest) => {\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label htmlFor={name}>{label}</label>\r\n        <div>\r\n          <DatePicker\r\n            peekNextMonth\r\n            showMonthDropdown\r\n            showYearDropdown\r\n            dropdownMode=\"select\"\r\n            placeholderText=\"Select a date\"\r\n            className=\"form-control\"\r\n            value={data[name]}\r\n            onBlur={() => {\r\n              const _errors = { ...errors }\r\n              delete _errors[name]\r\n              setErrors(_errors)\r\n            }}\r\n            {...rest}\r\n          />\r\n        </div>\r\n        {errors[name] && (\r\n          <p className=\"error-message text-danger p-1\">{errors[name]}</p>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const renderTextArea = (name, label, row = 3) => {\r\n    return (\r\n      <div className=\"form-group\">\r\n        <label htmlFor={name}>{label}</label>\r\n        <textarea\r\n          value={data[name]}\r\n          onChange={handleChange}\r\n          className=\"form-control\"\r\n          id={name}\r\n          rows={row}\r\n          name={name}\r\n        />\r\n        {errors[name] && (\r\n          <div className=\"alert p-2 mt-2 alert-danger\">{errors[name]}</div>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n  return (\r\n    <form onSubmit={e => handleSubmit(e, props.onSubmit)}>\r\n      {props.children({\r\n        renderButton,\r\n        renderInput,\r\n        renderTextArea,\r\n        renderDatePicker,\r\n        renderSelect,\r\n        renderCheckbox\r\n      })}\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Form\r\n","import React, { useState, useContext } from 'react'\r\nimport Form from '../../common/form'\r\nimport { toast } from 'react-toastify'\r\nimport Joi from 'joi-browser'\r\nimport { formatDate, joiLettersOnly } from '../../../services/utilsService'\r\nimport auth from '../../../services/authService'\r\n\r\nimport { ClientContext } from '../../../context'\r\n\r\nconst AddClient = props => {\r\n  const { onAddClient, status } = useContext(ClientContext)\r\n  const [client, setClient] = useState({\r\n    firstname: '',\r\n    lastname: '',\r\n    middlename: '',\r\n    address: '',\r\n    contact: '',\r\n    birthdate: '',\r\n    dateInsured: formatDate(Date.now()),\r\n    expiredDate: '',\r\n    codeNo: '',\r\n    userInsured: '',\r\n    gender: '',\r\n    mode: '',\r\n    civil: '',\r\n    forApproval: true\r\n  })\r\n\r\n  const [selectedGender, setSelectedGender] = useState(null)\r\n  const [selectedMode, setSelectedMode] = useState(null)\r\n  const [selectedCivil, setSelectedCivil] = useState(null)\r\n  const [errors, setErrors] = useState({})\r\n\r\n  const codeNoValidation = () => {\r\n    return client.forApproval\r\n      ? Joi.optional()\r\n      : Joi.string()\r\n          //.regex(/^(\\d+-?)+\\d+$/)\r\n          .regex(/^[a-zA-Z0-9-]+$/)\r\n          .error(errors => {\r\n            errors.forEach(err => {\r\n              switch (err.type) {\r\n                case 'string.regex.base':\r\n                  err.message =\r\n                    '\"Policy Number\" must only have a number and letter with hyphen'\r\n                  break\r\n                case 'string.min':\r\n                  err.message =\r\n                    '\"Policy Number\" must be equal to 15 characters long'\r\n                  break\r\n                case 'string.max':\r\n                  err.message =\r\n                    '\"Policy Number\" must be equal to 15 characters long'\r\n                  break\r\n                default:\r\n                  break\r\n              }\r\n            })\r\n            return errors\r\n          })\r\n          .min(15)\r\n          .max(15)\r\n          .label('Policy Number')\r\n  }\r\n\r\n  const schema = {\r\n    firstname: joiLettersOnly('Firstname'),\r\n    middlename: joiLettersOnly('Middlename'),\r\n    lastname: joiLettersOnly('Lastname'),\r\n    codeNo: codeNoValidation(),\r\n    contact: Joi.optional(),\r\n    address: Joi.optional(),\r\n    expiredDate: Joi.optional(),\r\n    birthdate: Joi.string()\r\n      .required()\r\n      .label('Birthdate'),\r\n    dateInsured: Joi.string()\r\n      .required()\r\n      .label('Date Insured'),\r\n    forApproval: Joi.optional(),\r\n    userInsured: Joi.optional(),\r\n    gender: Joi.string()\r\n      .required()\r\n      .label('Gender'),\r\n    mode: Joi.string()\r\n      .required()\r\n      .label('Mode of Payment'),\r\n    civil: Joi.string()\r\n      .required()\r\n      .label('Civil Status')\r\n  }\r\n\r\n  const handleChangeGender = gender => setSelectedGender(gender)\r\n\r\n  const handleChangeCivil = civil => setSelectedCivil(civil)\r\n\r\n  const handleChangeMode = mode => {\r\n    setSelectedMode(mode)\r\n  }\r\n\r\n  const getExpiredDate = (date, mode) => {\r\n    const dateInsured = new Date(date)\r\n\r\n    const expiredDate = new Date(dateInsured)\r\n\r\n    expiredDate.setMonth(dateInsured.getMonth() + getAddedMonth(mode))\r\n\r\n    return formatDate(expiredDate)\r\n  }\r\n\r\n  const handleSubmit = async (e, client) => {\r\n    if (!client.forApproval && client.codeNo === '') {\r\n      setErrors({ codeNo: `\"Policy Number\" is not allowed to be empty` })\r\n      return\r\n    }\r\n    const expiredDate = getExpiredDate(client.dateInsured, client.mode)\r\n\r\n    const _client = {\r\n      ...client,\r\n      dateInsured: new Date(client.dateInsured).toISOString(),\r\n      expiredDate: new Date(expiredDate).toISOString(),\r\n      userInsured: auth.getCurrentUser().id\r\n    }\r\n\r\n    try {\r\n      await onAddClient(_client)\r\n      toast.success('Saved')\r\n      setClient({\r\n        firstname: '',\r\n        lastname: '',\r\n        middlename: '',\r\n        address: '',\r\n        contact: '',\r\n        dateInsured: '',\r\n        birthdate: '',\r\n        codeNo: '',\r\n        userInsured: '',\r\n        gender: '',\r\n        mode: '',\r\n        civil: '',\r\n        forApproval: true\r\n      })\r\n      setSelectedGender(null)\r\n      setSelectedMode(null)\r\n      setSelectedCivil(null)\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const genders = [\r\n    {\r\n      id: 1,\r\n      label: 'Male',\r\n      value: 'male'\r\n    },\r\n    {\r\n      id: 2,\r\n      label: 'Female',\r\n      value: 'female'\r\n    }\r\n  ]\r\n  const civils = [\r\n    {\r\n      id: 1,\r\n      value: 'single',\r\n      label: 'Single'\r\n    },\r\n    {\r\n      id: 2,\r\n      value: 'divorced',\r\n      label: 'Divorced'\r\n    },\r\n    {\r\n      id: 3,\r\n      value: 'widowed',\r\n      label: 'Widowed'\r\n    }\r\n  ]\r\n  const modes = [\r\n    {\r\n      id: 1,\r\n      value: 'monthly',\r\n      label: 'Monthly'\r\n    },\r\n    {\r\n      id: 2,\r\n      value: 'quarterly',\r\n      label: 'Quarterly'\r\n    },\r\n    {\r\n      id: 3,\r\n      value: 'semi',\r\n      label: 'Semi-Annually'\r\n    },\r\n    {\r\n      id: 4,\r\n      value: 'annually',\r\n      label: 'Annually'\r\n    }\r\n  ]\r\n\r\n  const getAddedMonth = mode => {\r\n    switch (mode) {\r\n      case 'monthly':\r\n        return 1\r\n      case 'quarterly':\r\n        return 3\r\n      case 'semi':\r\n        return 6\r\n      case 'annually':\r\n        return 12\r\n      default:\r\n        return 0\r\n    }\r\n  }\r\n\r\n  const handleDateInsured = date => {\r\n    setClient({\r\n      ...client,\r\n      dateInsured: formatDate(date)\r\n    })\r\n  }\r\n\r\n  const handleBirthdate = date => {\r\n    setClient({\r\n      ...client,\r\n      birthdate: formatDate(date)\r\n    })\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-2 mb-3 border-bottom\">\r\n        <h1 className=\"h2\">Future Savings</h1>\r\n      </div>\r\n      <Form\r\n        data={{ data: client, setData: setClient }}\r\n        errors={{ errors, setErrors }}\r\n        onSubmit={handleSubmit}\r\n        schema={schema}\r\n      >\r\n        {({\r\n          renderInput,\r\n          renderSelect,\r\n          renderTextArea,\r\n          renderDatePicker,\r\n          renderButton,\r\n          renderCheckbox\r\n        }) => {\r\n          return (\r\n            <div className=\"row\">\r\n              <div className=\"col-6\">\r\n                {renderInput('firstname', 'Firstname')}\r\n                {renderInput('middlename', 'Middlename')}\r\n                {renderInput('lastname', 'Lastname')}\r\n                {renderSelect(\r\n                  'gender',\r\n                  'Gender',\r\n                  selectedGender,\r\n                  handleChangeGender,\r\n                  genders\r\n                )}\r\n                {renderSelect(\r\n                  'civil',\r\n                  'Civil Status',\r\n                  selectedCivil,\r\n                  handleChangeCivil,\r\n                  civils\r\n                )}\r\n                {renderDatePicker('birthdate', 'Birthdate', {\r\n                  onChange: handleBirthdate\r\n                })}\r\n                {renderInput('contact', 'Contact')}\r\n                {renderTextArea('address', 'Address')}\r\n              </div>\r\n\r\n              <div className=\"col-6\">\r\n                {renderDatePicker('dateInsured', 'Date Insured', {\r\n                  onChange: handleDateInsured\r\n                })}\r\n\r\n                {renderSelect(\r\n                  'mode',\r\n                  'Mode of Payment',\r\n                  selectedMode,\r\n                  handleChangeMode,\r\n                  modes\r\n                )}\r\n                {!client.forApproval && renderInput('codeNo', 'Policy No')}\r\n\r\n                {renderCheckbox('forApproval', 'For Approval', {\r\n                  onChange: e =>\r\n                    setClient({\r\n                      ...client,\r\n                      codeNo: '',\r\n                      forApproval: e.target.checked\r\n                    })\r\n                })}\r\n\r\n                {renderButton('Save', null, 'Saving...', true)}\r\n                <button\r\n                  onClick={e => {\r\n                    e.preventDefault()\r\n                    props.history.replace('/dashboard')\r\n                  }}\r\n                  className=\"btn btn-grad-secondary btn-block\"\r\n                  name=\"back\"\r\n                >\r\n                  Back\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )\r\n        }}\r\n      </Form>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default AddClient\r\n","import React, { useState, useContext } from 'react'\r\nimport Form from '../../common/form'\r\nimport Joi from 'joi-browser'\r\nimport { toast } from 'react-toastify'\r\nimport { formatDate, joiLettersOnly } from '../../../services/utilsService'\r\n\r\nimport { ClientContext } from '../../../context'\r\nconst AddGPA = props => {\r\n  const { onAddClient } = useContext(ClientContext)\r\n\r\n  const [client, setClient] = useState({\r\n    firstname: '',\r\n    lastname: '',\r\n    middlename: '',\r\n    birthdate: '',\r\n    address: '',\r\n    contact: '',\r\n    codeNo: '',\r\n    gender: '',\r\n    coverage: 0\r\n  })\r\n\r\n  const [selectedCoverage, setSelectedCoverage] = useState(null)\r\n  const [selectedGender, setSelectedGender] = useState(null)\r\n  const [errors, setErrors] = useState({})\r\n\r\n  const schema = {\r\n    firstname: joiLettersOnly('Firstname'),\r\n    middlename: joiLettersOnly('Middlename'),\r\n    lastname: joiLettersOnly('Lastname'),\r\n    birthdate: Joi.string()\r\n      .required()\r\n      .label('Birthdate'),\r\n    gender: Joi.string()\r\n      .required()\r\n      .label('Gender'),\r\n    coverage: Joi.number()\r\n      .required()\r\n      .label('Coverage'),\r\n    contact: Joi.optional(),\r\n    address: Joi.optional(),\r\n    codeNo: Joi.number()\r\n      .required()\r\n      .label('Code Number')\r\n  }\r\n\r\n  const handleChangeCoverage = coverage => setSelectedCoverage(coverage)\r\n\r\n  const handleChangeGender = gender => setSelectedGender(gender)\r\n  const handleSubmit = async (e, client) => {\r\n    try {\r\n      await onAddClient({ ...client, isGPA: true })\r\n      toast.success('Saved')\r\n\r\n      setClient({\r\n        firstname: '',\r\n        lastname: '',\r\n        middlename: '',\r\n        address: '',\r\n        contact: '',\r\n        codeNo: '',\r\n        gender: '',\r\n        birthdate: '',\r\n        coverage: 0\r\n      })\r\n      setSelectedGender(null)\r\n      setSelectedCoverage(null)\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const genders = [\r\n    {\r\n      id: 1,\r\n      label: 'Male',\r\n      value: 'smale'\r\n    },\r\n    {\r\n      id: 2,\r\n      label: 'Female',\r\n      value: 'female'\r\n    }\r\n  ]\r\n\r\n  const coverages = [\r\n    {\r\n      id: 1,\r\n      label: '1 Year',\r\n      value: 1\r\n    },\r\n    {\r\n      id: 2,\r\n      label: '2 Years',\r\n      value: 2\r\n    },\r\n    {\r\n      id: 3,\r\n      label: '3 Years',\r\n      value: 3\r\n    }\r\n  ]\r\n  const handleBirthdate = date => {\r\n    setClient({\r\n      ...client,\r\n      birthdate: formatDate(date)\r\n    })\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-2 mb-3 border-bottom\">\r\n        <h1 className=\"h2\">GPA Form</h1>\r\n      </div>\r\n      <Form\r\n        data={{ data: client, setData: setClient }}\r\n        errors={{ errors, setErrors }}\r\n        onSubmit={handleSubmit}\r\n        schema={schema}\r\n      >\r\n        {({ renderInput, renderSelect, renderTextArea, renderDatePicker }) => {\r\n          return (\r\n            <div className=\"row\">\r\n              <div className=\"col-6\">\r\n                {renderInput('firstname', 'Firstname')}\r\n                {renderInput('middlename', 'Middlename')}\r\n                {renderInput('lastname', 'Lastname')}\r\n                {renderSelect(\r\n                  'gender',\r\n                  'Gender',\r\n                  selectedGender,\r\n                  handleChangeGender,\r\n                  genders\r\n                )}\r\n                {renderDatePicker('birthdate', 'Birthdate', {\r\n                  onChange: handleBirthdate\r\n                })}\r\n                {renderInput('contact', 'Contact')}\r\n                {renderTextArea('address', 'Address')}\r\n              </div>\r\n\r\n              <div className=\"col-6\">\r\n                {renderInput('codeNo', 'GPA No.')}\r\n\r\n                {renderSelect(\r\n                  'coverage',\r\n                  'Coverage',\r\n                  selectedCoverage,\r\n                  handleChangeCoverage,\r\n                  coverages\r\n                )}\r\n                <button className=\"btn btn-grad-primary btn-block\" name=\"back\">\r\n                  Save\r\n                </button>\r\n                <button\r\n                  onClick={e => {\r\n                    e.preventDefault()\r\n                    props.history.replace('/dashboard')\r\n                  }}\r\n                  className=\"btn btn-grad-secondary btn-block\"\r\n                  name=\"back\"\r\n                >\r\n                  Back\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )\r\n        }}\r\n      </Form>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default AddGPA\r\n","import React, { useState } from 'react'\r\nimport Joi from 'joi-browser'\r\nimport { cap } from '../../../services/utilsService'\r\nimport { toast } from 'react-toastify'\r\nimport Form from '../../common/form'\r\nimport { isBranchTaken, addBranch } from '../../../services/userService'\r\n\r\nconst AddBranch = ({ onRefresh, ...props }) => {\r\n  const [branch, setBranch] = useState({ name: '', address: '', contact: '' })\r\n  const [errors, setErrors] = useState({})\r\n\r\n  const schema = {\r\n    name: Joi.string()\r\n      .required()\r\n      .label('Name'),\r\n    address: Joi.optional(),\r\n    contact: Joi.optional()\r\n  }\r\n\r\n  const handleSubmit = async (e, data) => {\r\n    const _errors = await handleCheckUser(e)\r\n\r\n    if (Object.keys(_errors).length > 0) {\r\n      setErrors(_errors)\r\n      return\r\n    }\r\n\r\n    try {\r\n      addBranch(data).then(() => props.history.replace('/branches'))\r\n      toast.success(`Saved`)\r\n    } catch ({ response }) {\r\n      if (response && response.status === 401) {\r\n        toast.error(response.data.status.errors)\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleCheckUser = async ({ currentTarget: input }) => {\r\n    const { isTaken } = await isBranchTaken(input.value)\r\n\r\n    const _errors = { ...errors }\r\n\r\n    if (isTaken) {\r\n      _errors[input.name] = `\"${input.value}\" is taken`\r\n    }\r\n\r\n    setErrors(_errors)\r\n\r\n    return _errors\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-2 mb-3 border-bottom\">\r\n        <h1 className=\"h2\">Branch</h1>\r\n      </div>\r\n      <div className=\"col-6 offset-3\">\r\n        <Form\r\n          data={{ data: branch, setData: setBranch }}\r\n          errors={{ errors, setErrors }}\r\n          onSubmit={handleSubmit}\r\n          schema={schema}\r\n        >\r\n          {({ renderInput, renderButton, renderTextArea }) => {\r\n            return (\r\n              <React.Fragment>\r\n                {renderInput('name', 'Name', 'name', '')}\r\n                {renderTextArea('address', 'Address', 'address')}\r\n                {renderInput('contact', 'Contact', 'contact')}\r\n                {renderButton('ADD', null, 'Adding...', true)}\r\n              </React.Fragment>\r\n            )\r\n          }}\r\n        </Form>\r\n        <button\r\n          onClick={e => {\r\n            e.preventDefault()\r\n            props.history.replace('/branches')\r\n          }}\r\n          className=\"btn btn-grad-secondary btn-block mt-3\"\r\n          name=\"back\"\r\n        >\r\n          Back\r\n        </button>\r\n      </div>\r\n\r\n      <style jsx=\"\">{`\r\n        .spinner {\r\n          margin-top: 200px;\r\n        }\r\n      `}</style>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default AddBranch\r\n","import React from 'react'\n\n// columns: array\n// sortColumn: object\n// onSort: function\n\nconst TableHeader = props => {\n  const raiseSort = path => {\n    const sortColumn = { ...props.sortColumn }\n    if (sortColumn.path === path)\n      sortColumn.order = sortColumn.order === 'asc' ? 'desc' : 'asc'\n    else {\n      sortColumn.path = path\n      sortColumn.order = 'asc'\n    }\n    props.onSort(sortColumn)\n  }\n\n  const renderSortIcon = column => {\n    const { sortColumn } = props\n\n    if (!column.path) return null\n\n    if (column.path !== sortColumn.path) return null\n\n    if (sortColumn.order === 'asc') return <i className=\"fa fa-sort-asc\" />\n    return <i className=\"fa fa-sort-desc\" />\n  }\n\n  return (\n    <thead className=\"thead-dark\">\n      <tr>\n        {props.columns.map((column, i) => (\n          <th\n            className=\"clickable\"\n            key={i}\n            onClick={() => raiseSort(column.path)}\n          >\n            {column.label} {renderSortIcon(column)}\n          </th>\n        ))}\n      </tr>\n      <style jsx=\"\">{`\n        .table .thead-dark th {\n          color: #fff;\n          background-color: #343a40 !important;\n          border-color: #32383e;\n        }\n      `}</style>\n    </thead>\n  )\n}\n\nexport default TableHeader\n","import React from 'react'\nimport _ from 'lodash'\n\nconst TableBody = ({ data, columns }) => {\n  const renderCell = (item, column) => {\n    if (column.content) return column.content(item)\n\n    return _.get(item, column.path)\n  }\n\n  return (\n    <tbody>\n      {data.map(item => (\n        <tr key={item.id}>\n          {columns.map((column, i) => (\n            <td key={i}>{renderCell(item, column)}</td>\n          ))}\n        </tr>\n      ))}\n    </tbody>\n  )\n}\n\nexport default TableBody\n","import React from 'react'\nimport TableHeader from './tableHeader'\nimport TableBody from './tableBody'\n\nconst Table = ({ columns, sortColumn, onSort, data }) => {\n  return (\n    <table className=\"table table-bordered table-hover \">\n      <TableHeader columns={columns} sortColumn={sortColumn} onSort={onSort} />\n\n      <TableBody columns={columns} data={data} />\n    </table>\n  )\n}\n\nexport default Table\n","import React, { useState, useEffect } from 'react'\r\nimport Table from '../../common/table'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { sortBy, toElipse } from '../../../services/utilsService'\r\n\r\nconst TableBranch = ({ branches, setBranches, ...props }) => {\r\n  const [sortColumn, setSortColumn] = useState({ path: 'name', order: 'asc' })\r\n\r\n  const _branches = () =>\r\n    branches.map(b => {\r\n      b.address = toElipse(b.address, 15)\r\n      b.manager = b.manager !== null ? toElipse(b.manager, 10) : b.manager\r\n      return b\r\n    })\r\n\r\n  const handleSort = sortColumn => {\r\n    setSortColumn(sortColumn)\r\n    setBranches(sortBy(branches, sortColumn))\r\n  }\r\n\r\n  const columns = [\r\n    {\r\n      path: 'id',\r\n      label: '#'\r\n    },\r\n    {\r\n      path: 'name',\r\n      label: 'Name'\r\n    },\r\n    {\r\n      path: 'manager',\r\n      label: 'Manager'\r\n    },\r\n\r\n    {\r\n      path: 'address',\r\n      label: 'Address'\r\n    },\r\n    {\r\n      path: 'contact',\r\n      label: 'Contact'\r\n    },\r\n    {\r\n      key: 'actions',\r\n      label: 'Action',\r\n      content: branch => (\r\n        <div className=\"row pl-1 pt-1 pr-1\">\r\n          <div className=\"d-flex justify-content-between\">\r\n            <Link to={`/branches/edit/${branch.id}`}>\r\n              <button className=\"btn btn-sm btn-outline-warning ml-1\">\r\n                EDIT\r\n              </button>\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  ]\r\n\r\n  return (\r\n    <Table\r\n      columns={columns}\r\n      data={_branches()}\r\n      sortColumn={sortColumn}\r\n      onSort={handleSort}\r\n    />\r\n  )\r\n}\r\n\r\nexport default TableBranch\r\n","import React, { Component, useState } from 'react'\r\n\r\nconst Spinner = ({\r\n  width = 40,\r\n  heigth = 40,\r\n  color = '#03995b',\r\n  duration = '640ms',\r\n  isLoaded = false,\r\n  className,\r\n  ...props\r\n}) => {\r\n  if (isLoaded) return props.children\r\n\r\n  return (\r\n    <div className={`d-flex justify-content-center ${className}`}>\r\n      <svg\r\n        version=\"1.0\"\r\n        width={`${width}px`}\r\n        height={`${heigth}px`}\r\n        viewBox=\"0 0 128 128\"\r\n      >\r\n        <g>\r\n          <circle cx=\"16\" cy=\"64\" r=\"16\" fill={color} fillOpacity=\"1\" />\r\n          <circle\r\n            cx=\"16\"\r\n            cy=\"64\"\r\n            r=\"14.344\"\r\n            fill={color}\r\n            fillOpacity=\"1\"\r\n            transform=\"rotate(45 64 64)\"\r\n          />\r\n          <circle\r\n            cx=\"16\"\r\n            cy=\"64\"\r\n            r=\"12.531\"\r\n            fill={color}\r\n            fillOpacity=\"1\"\r\n            transform=\"rotate(90 64 64)\"\r\n          />\r\n          <circle\r\n            cx=\"16\"\r\n            cy=\"64\"\r\n            r=\"10.75\"\r\n            fill={color}\r\n            fillOpacity=\"1\"\r\n            transform=\"rotate(135 64 64)\"\r\n          />\r\n          <circle\r\n            cx=\"16\"\r\n            cy=\"64\"\r\n            r=\"10.063\"\r\n            fill={color}\r\n            fillOpacity=\"1\"\r\n            transform=\"rotate(180 64 64)\"\r\n          />\r\n          <circle\r\n            cx=\"16\"\r\n            cy=\"64\"\r\n            r=\"8.063\"\r\n            fill={color}\r\n            fillOpacity=\"1\"\r\n            transform=\"rotate(225 64 64)\"\r\n          />\r\n          <circle\r\n            cx=\"16\"\r\n            cy=\"64\"\r\n            r=\"6.438\"\r\n            fill={color}\r\n            fillOpacity=\"1\"\r\n            transform=\"rotate(270 64 64)\"\r\n          />\r\n          <circle\r\n            cx=\"16\"\r\n            cy=\"64\"\r\n            r=\"5.375\"\r\n            fill={color}\r\n            fillOpacity=\"1\"\r\n            transform=\"rotate(315 64 64)\"\r\n          />\r\n          <animateTransform\r\n            attributeName=\"transform\"\r\n            type=\"rotate\"\r\n            values=\"0 64 64;315 64 64;270 64 64;225 64 64;180 64 64;135 64 64;90 64 64;45 64 64\"\r\n            calcMode=\"discrete\"\r\n            dur={duration}\r\n            repeatCount=\"indefinite\"\r\n          ></animateTransform>\r\n        </g>\r\n      </svg>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Spinner\r\n","import React, { useState } from 'react'\r\nimport Joi from 'joi-browser'\r\nimport { toast } from 'react-toastify'\r\nimport AddBranch from './new'\r\nimport TableBranch from './tableBranch'\r\nimport useBranches from '../../../hooks/useBranches'\r\nimport Spinner from './../../common/spinner'\r\n\r\nconst Branch = props => {\r\n  const { branches, setRefresh, setBranches, isLoaded } = useBranches()\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-2 mb-3 border-bottom\">\r\n        <h1 className=\"h2\">Branch</h1>\r\n        <button\r\n          onClick={() => props.history.replace('/branches/new')}\r\n          className=\"btn btn-sm btn-grad-secondary ml-1\"\r\n        >\r\n          <span className=\"fa fa-plus mr-1\"></span>\r\n          BRANCH\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"row mb-4\">\r\n        <div className=\"col-12 side-content pt-4\">\r\n          <Spinner isLoaded={isLoaded} className=\"spinner\">\r\n            <TableBranch branches={branches} setBranches={setBranches} />\r\n          </Spinner>\r\n        </div>\r\n        {/* <div className=\"col-4 pt-4 pl-0\">\r\n          <AddBranch onRefresh={setRefresh}></AddBranch>\r\n        </div> */}\r\n      </div>\r\n\r\n      <style jsx=\"\">{`\r\n        .side-content {\r\n          border-radius: 5px 0 0 5px;\r\n        }\r\n        .spinner {\r\n          margin-top: 200px;\r\n        }\r\n        .fa-plus {\r\n          margin-top: 0 !important;\r\n        }\r\n      `}</style>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Branch\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport { getBranches } from '../services/userService'\r\n\r\nexport default () => {\r\n  const [branches, setBranches] = useState([])\r\n  const [refresh, setRefresh] = useState(false)\r\n  const [isLoaded, setIsLoaded] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setIsLoaded(false)\r\n    getBranches('/api/branches', true).then(branches => {\r\n      setIsLoaded(true)\r\n      setBranches(branches)\r\n    })\r\n  }, [refresh])\r\n  return { branches, setRefresh, setBranches, isLoaded }\r\n}\r\n","import React, { useContext, useEffect } from 'react'\r\nimport { UserContext } from '../../context'\r\nimport { createArray } from '../../services/utilsService'\r\nimport { pagination, theme } from '../../config.json'\r\n\r\nconst Paginate = props => {\r\n  const { pageNumbers: PAGE_NUMBERS } = pagination\r\n\r\n  const {\r\n    state: { pageNum, pages, start, end },\r\n    onPageChange,\r\n    onSetStart,\r\n    onSetEnd\r\n  } = useContext(UserContext)\r\n\r\n  //reset start end when delete is 0 in paged\r\n  useEffect(() => {\r\n    if (end > pages && start !== 1) {\r\n      handleDecrementStart()\r\n      handleDecrementEnd()\r\n    }\r\n  }, [pageNum])\r\n\r\n  const handleIncrementStart = () => onSetStart(start + 1)\r\n\r\n  const handleDecrementStart = () => onSetStart(start - 1)\r\n\r\n  const handleIncrementEnd = () => onSetEnd(end + 1)\r\n\r\n  const handleDecrementEnd = () => onSetEnd(end - 1)\r\n\r\n  const handlePageChange = _pageNum => {\r\n    if (pageNum === _pageNum) return\r\n    onPageChange(_pageNum)\r\n  }\r\n  const doNext = pageNum => {\r\n    handlePageChange(pageNum + 1)\r\n    if (end === pages) return\r\n    handleIncrementStart()\r\n    handleIncrementEnd()\r\n  }\r\n  const doPrev = _pageNum => {\r\n    handlePageChange(_pageNum - 1)\r\n\r\n    if (start === 1) return\r\n    handleDecrementStart()\r\n    handleDecrementEnd()\r\n  }\r\n\r\n  const renderPages = () => {\r\n    let _end = pages < PAGE_NUMBERS ? pages : end\r\n\r\n    return createArray(start, _end).map(_pageNum => (\r\n      <li\r\n        key={_pageNum}\r\n        className={pageNum === _pageNum ? 'page-item active' : 'page-item'}\r\n      >\r\n        <button\r\n          className=\"page-link\"\r\n          onClick={() => handlePageChange(_pageNum)}\r\n        >\r\n          {_pageNum}\r\n        </button>\r\n      </li>\r\n    ))\r\n  }\r\n\r\n  const isNavHidden = () => {\r\n    return pages > PAGE_NUMBERS\r\n  }\r\n\r\n  const isPagesHidden = () => {\r\n    return pages > 1\r\n  }\r\n\r\n  const isFirstDisabled = () => {\r\n    return pageNum === 1 ? 'disabled' : ''\r\n  }\r\n\r\n  const isLastDisabled = () => {\r\n    return pages === pageNum ? 'disabled' : ''\r\n  }\r\n\r\n  const prevPage = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <li className={`page-item ${isFirstDisabled()}`}>\r\n          <button\r\n            className=\"page-link\"\r\n            onClick={() => {\r\n              if (pageNum === 1) return\r\n              handlePageChange(1)\r\n              onSetStart(1)\r\n              onSetEnd(PAGE_NUMBERS)\r\n            }}\r\n          >\r\n            {'first'}\r\n          </button>\r\n        </li>\r\n\r\n        <li className={`page-item ${isFirstDisabled()}`}>\r\n          <button\r\n            className=\"page-link\"\r\n            aria-label=\"Previous\"\r\n            onClick={() => doPrev(pageNum)}\r\n          >\r\n            &laquo;\r\n          </button>\r\n        </li>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  const nextPage = () => {\r\n    return (\r\n      <React.Fragment>\r\n        <li className={`page-item ${isLastDisabled()}`}>\r\n          <button\r\n            className=\"page-link\"\r\n            aria-label=\"Next\"\r\n            onClick={() => doNext(pageNum)}\r\n          >\r\n            &raquo;\r\n          </button>\r\n        </li>\r\n\r\n        <li className={`page-item ${isLastDisabled()}`}>\r\n          <button\r\n            className=\"page-link\"\r\n            onClick={() => {\r\n              handlePageChange(pages)\r\n              onSetStart(pages - (PAGE_NUMBERS - 1))\r\n              onSetEnd(pages)\r\n            }}\r\n          >\r\n            {'last'}\r\n          </button>\r\n        </li>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n\r\n  const pageOf = () => {\r\n    return (\r\n      <div className=\"pages px-0 col d-flex justify-content-end\">\r\n        <p className=\"page-of\">{`${pageNum} of ${pages}`}</p>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <div className=\"col d-flex justify-content-start px-0\">\r\n          <nav>\r\n            <ul className=\"pagination\">\r\n              {isNavHidden() && prevPage()}\r\n\r\n              {isPagesHidden() && renderPages()}\r\n\r\n              {isNavHidden() && nextPage()}\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n        {pageOf()}\r\n        <style jsx=\"\">\r\n          {`\r\n            .pages {\r\n              text-align: right;\r\n            }\r\n            .page-of {\r\n              margin-top: 10px;\r\n            }\r\n            .page-item.active .page-link {\r\n              z-index: 1;\r\n              color: #fff;\r\n              background-color: ${theme.secondary};\r\n              border-color: ${theme.secondary};\r\n            }\r\n\r\n            .page-link {\r\n              color: ${theme.secondary};\r\n            }\r\n            .page-link:hover {\r\n              color: ${theme.secondary};\r\n            }\r\n          `}\r\n        </style>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Paginate\r\n","import React from 'react'\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap'\r\n\r\nconst CustomModal = ({\r\n  label,\r\n  primary,\r\n  secondary,\r\n  modal,\r\n  toggle,\r\n  className,\r\n  title,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Modal isOpen={modal} toggle={toggle} className={`${className}`} {...rest}>\r\n      <ModalHeader toggle={toggle}>{title}</ModalHeader>\r\n      <ModalBody>{label}</ModalBody>\r\n      <ModalFooter>\r\n        <button\r\n          className={`btn btn-${(primary && primary.type) || 'primary'} btn-sm`}\r\n          name=\"primary\"\r\n          onClick={toggle}\r\n        >\r\n          {(primary && primary.label) || 'Ok'}\r\n        </button>{' '}\r\n        <button\r\n          className={`btn btn-${(secondary && secondary.type) ||\r\n            'secondary'} btn-sm`}\r\n          name=\"secondary\"\r\n          onClick={toggle}\r\n        >\r\n          {(secondary && secondary.label) || 'Cancel'}\r\n        </button>\r\n      </ModalFooter>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default CustomModal\r\n","import React, { useContext, useState } from 'react'\r\n\r\nconst SearchForm = ({ handleSearch, placeholder = 'Search here' }) => {\r\n  const [search, setSearch] = useState('')\r\n\r\n  const handleChange = e => {\r\n    setSearch(e.target.value)\r\n    // handleSearch({ e, search: e.target.value })\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <form onSubmit={e => handleSearch({ e, search })}>\r\n        <input\r\n          type={'text'}\r\n          name={search}\r\n          value={search}\r\n          onChange={handleChange}\r\n          className=\"form-control\"\r\n          placeholder={placeholder}\r\n        />\r\n        <button className=\"btn btn-grad-primary ml-2\">SEARCH</button>\r\n        <button\r\n          onClick={() => setSearch('')}\r\n          className=\"btn btn-grad-secondary ml-2\"\r\n        >\r\n          REFRESH\r\n        </button>\r\n      </form>\r\n      <style jsx=\"\">{`\r\n        form {\r\n          display: flex;\r\n        }\r\n        .btn-search {\r\n          width: 15%;\r\n        }\r\n      `}</style>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default SearchForm\r\n","import React, { useState, useContext, useEffect } from 'react'\r\nimport Table from '../../common/table'\r\nimport { UserContext } from '../../../context'\r\nimport Paginate from '../../common/paginate'\r\nimport CustomModal from '../../common/modal'\r\nimport { verifyUser } from '../../../services/userService'\r\nimport SearchForm from '../../common/searchForm'\r\nimport { pagination } from '../../../config.json'\r\nimport { Link } from 'react-router-dom'\r\nimport Spinner from '../../common/spinner'\r\n\r\nimport withAuth from './../../hoc/withAuth'\r\n\r\nconst Users = ({ auth, ...props }) => {\r\n  const {\r\n    state: { users, pageNum, start, end, notFound },\r\n    onDelete,\r\n    onRefresh,\r\n    onPageChange,\r\n    onSort,\r\n    onSearch,\r\n    onSetStart,\r\n    onSetEnd,\r\n    onSetStatus\r\n  } = useContext(UserContext)\r\n\r\n  const [selectedUser, setSelectedUser] = useState({})\r\n\r\n  const [sortColumn, setSortColumn] = useState({ path: 'name', order: 'asc' })\r\n\r\n  const columns = [\r\n    {\r\n      path: 'id',\r\n      label: '#'\r\n    },\r\n    {\r\n      path: 'username',\r\n      label: 'Username'\r\n    },\r\n    {\r\n      path: 'profile.lastname',\r\n      key: 'fullname',\r\n      label: 'Fullname',\r\n      content: user =>\r\n        `${user.profile.firstname}, ${user.profile.middlename} ${user.profile.lastname}`\r\n    },\r\n\r\n    {\r\n      path: 'position',\r\n      label: 'Position'\r\n    },\r\n    {\r\n      path: 'profile.branch.name',\r\n      label: 'Branch'\r\n    },\r\n    {\r\n      path: 'profile.codeNo',\r\n      key: 'codeNo',\r\n      label: 'Code #',\r\n      content: ({ profile }) => profile.codeNo\r\n    },\r\n    {\r\n      path: 'status',\r\n      key: 'status',\r\n      label: 'Status',\r\n      content: user => (\r\n        <span\r\n          onClick={async e => {\r\n            setSelectedUser(user)\r\n            await toggle(e)\r\n          }}\r\n          className={`badge badge-${user.status === 1 ? 'success' : 'danger'}`}\r\n        >\r\n          {user.status === 1 ? 'active' : 'inactive'}\r\n        </span>\r\n      )\r\n    },\r\n    {\r\n      key: 'actions',\r\n      label: 'Actions',\r\n      content: user => (\r\n        <div className=\"row pl-1 pt-1 pr-1\">\r\n          <div className=\"d-flex justify-content-around\">\r\n            <Link to={`/users/${user.id}`}>\r\n              <button className=\"btn btn-sm btn-outline-primary ml-1\">\r\n                VIEW\r\n              </button>\r\n            </Link>\r\n            <Link to={`/users/edit/${user.id}`}>\r\n              <button className=\"btn btn-sm btn-outline-warning ml-1\">\r\n                EDIT\r\n              </button>\r\n            </Link>\r\n            <button\r\n              onClick={e => {\r\n                setSelectedUser(user)\r\n                toggleDelete(e).then(data => data)\r\n              }}\r\n              className=\"btn btn-sm btn-outline-danger ml-1\"\r\n              name=\"delete\"\r\n            >\r\n              ARCHIVE\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  ]\r\n\r\n  const [modal, setModal] = useState(false)\r\n\r\n  const toggle = async ({ target }) => {\r\n    setModal(modal => !modal)\r\n\r\n    if (target && target.name === 'primary') {\r\n      await verifyUser(selectedUser.id)\r\n      setSelectedUser({})\r\n      onRefresh()\r\n    }\r\n  }\r\n\r\n  const [modalDelete, setModalDelete] = useState(false)\r\n\r\n  const toggleDelete = async ({ target }) => {\r\n    setModalDelete(modalDelete => !modalDelete)\r\n    if (target && target.name === 'primary') {\r\n      await doDelete(selectedUser)\r\n      setSelectedUser({})\r\n\r\n      onRefresh()\r\n    }\r\n  }\r\n\r\n  const renderModal = () => {\r\n    return (\r\n      <CustomModal\r\n        title=\"Cocolife\"\r\n        modal={modal}\r\n        toggle={toggle}\r\n        label={`${selectedUser.status === 0 ? 'Activate' : 'Deactivate'} ${\r\n          selectedUser.username\r\n        }?`}\r\n        primary={{ type: 'primary', label: 'CONFIRM' }}\r\n      />\r\n    )\r\n  }\r\n\r\n  const renderModalDelete = () => {\r\n    return (\r\n      <CustomModal\r\n        title=\"Cocolife\"\r\n        modal={modalDelete}\r\n        toggle={toggleDelete}\r\n        label={`Archive ${selectedUser.username}?`}\r\n        primary={{ type: 'danger', label: 'ARCHIVE' }}\r\n      />\r\n    )\r\n  }\r\n\r\n  const doDelete = async user => {\r\n    if (!(await onDelete(user))) {\r\n      onPageChange(pageNum - 1)\r\n      if (start > 1) {\r\n        onSetStart(start - 1)\r\n      }\r\n      onSetEnd(end - 1)\r\n      return\r\n    }\r\n    onRefresh()\r\n  }\r\n\r\n  const handleSort = sortColumn => {\r\n    onSort(sortColumn)\r\n    setSortColumn(sortColumn)\r\n  }\r\n\r\n  const handleSearch = async ({ e, search }) => {\r\n    e.preventDefault()\r\n    // if (!search)\r\n    props.history.replace('/users')\r\n    onSetStatus(null)\r\n    onSetStart(1)\r\n    onSetEnd(pagination.pageNumbers)\r\n    onPageChange(1)\r\n    onSearch(search)\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {renderModal()}\r\n      {renderModalDelete()}\r\n\r\n      <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-2 mb-3 border-bottom\">\r\n        <h1 className=\"h2\">Users Management</h1>\r\n        {auth.isAdmin() && (\r\n          <button\r\n            onClick={() => props.history.replace('/users/new')}\r\n            className=\"btn btn-sm btn-grad-secondary ml-1\"\r\n          >\r\n            <span className=\"fa fa-plus mr-1\"></span>\r\n            MANAGER\r\n          </button>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"col-12\">\r\n        <div className=\"mb-3\">\r\n          <SearchForm handleSearch={handleSearch} placeholder=\"Search here\" />\r\n        </div>\r\n\r\n        <Table\r\n          columns={columns}\r\n          data={users}\r\n          sortColumn={sortColumn}\r\n          onSort={handleSort}\r\n        />\r\n        {users.length === 0 && !notFound && (\r\n          <Spinner className=\"spinner mt-5 pt-5 mb-5\" />\r\n        )}\r\n        {notFound && <h6 className=\"mt-2 mb-5\">No records found!</h6>}\r\n        {users.length > 0 && <Paginate />}\r\n      </div>\r\n\r\n      <style jsx=\"\">{`\r\n        .col-4 {\r\n          padding: 0;\r\n        }\r\n        .badge {\r\n          cursor: pointer;\r\n          margin-right: 2px !important;\r\n        }\r\n        .spinner {\r\n          margin-bottom: 200px !important;\r\n        }\r\n        .fa-plus {\r\n          margin-top: 0 !important;\r\n        }\r\n      `}</style>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default withAuth(Users)\r\n","import React, { useState, useEffect } from 'react'\r\nimport Select from 'react-select'\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap'\r\nimport { cap, formatDate } from '../../services/utilsService'\r\nimport auth from '../../services/authService'\r\nconst CustomModal = ({\r\n  client,\r\n  label,\r\n  primary,\r\n  secondary,\r\n  modal,\r\n  toggle,\r\n  className,\r\n  title,\r\n  ...rest\r\n}) => {\r\n  const modes = [\r\n    {\r\n      id: 1,\r\n      value: 'monthly',\r\n      label: 'Monthly'\r\n    },\r\n    {\r\n      id: 2,\r\n      value: 'quarterly',\r\n      label: 'Quarterly'\r\n    },\r\n    {\r\n      id: 3,\r\n      value: 'semi',\r\n      label: 'Semi-Annually'\r\n    },\r\n    {\r\n      id: 4,\r\n      value: 'annually',\r\n      label: 'Annually'\r\n    }\r\n  ]\r\n\r\n  const [mode, setMode] = useState(null)\r\n\r\n  const handleOnChange = selectedMode => {\r\n    setMode(selectedMode)\r\n  }\r\n\r\n  const getAddedMonth = mode => {\r\n    switch (mode) {\r\n      case 'monthly':\r\n        return 1\r\n      case 'quarterly':\r\n        return 3\r\n      case 'semi':\r\n        return 6\r\n      case 'annually':\r\n        return 12\r\n      default:\r\n        return 0\r\n    }\r\n  }\r\n\r\n  const getExpiredDate = (date, mode) => {\r\n    const dateInsured = new Date(date)\r\n\r\n    const expiredDate = new Date(dateInsured)\r\n\r\n    expiredDate.setMonth(dateInsured.getMonth() + getAddedMonth(mode))\r\n\r\n    return new Date(expiredDate).toISOString()\r\n  }\r\n\r\n  const dateInsured = new Date(Date.now()).toISOString()\r\n\r\n  const _client = () => {\r\n    return {\r\n      ...client,\r\n      dateInsured,\r\n      expiredDate: getExpiredDate(client.dateInsured, mode ? mode.value : ''),\r\n      mode: mode ? mode.value : '',\r\n      userInsured: auth.getCurrentUser().id\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal isOpen={modal} toggle={toggle} className={`${className}`} {...rest}>\r\n      <ModalHeader toggle={toggle}>{title}</ModalHeader>\r\n\r\n      <ModalBody>\r\n        <p>Policy #: {client.codeNo}</p>\r\n        <p>Name: {`${client.firstname} ${client.lastname}`}</p>\r\n        <p>Date Insured: {formatDate(dateInsured)}</p>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"mode\">Mode of Payment</label>\r\n          <Select\r\n            isSearchable\r\n            isClearable\r\n            value={mode}\r\n            onChange={handleOnChange}\r\n            options={modes}\r\n          />\r\n          {!mode && (\r\n            <p className=\"error-message text-danger p-1\">{`\"Mode of Payment is not allowed to be empty\"`}</p>\r\n          )}\r\n        </div>\r\n      </ModalBody>\r\n\r\n      <ModalFooter>\r\n        <button\r\n          className={`btn btn-${(primary && primary.type) || 'primary'} btn-sm`}\r\n          name=\"primary\"\r\n          onClick={e => {\r\n            if (!mode) return\r\n            toggle(e, _client())\r\n            setMode(null)\r\n          }}\r\n        >\r\n          {(primary && primary.label) || 'Ok'}\r\n        </button>\r\n        <button\r\n          className={`btn btn-${(secondary && secondary.type) ||\r\n            'secondary'} btn-sm`}\r\n          name=\"secondary\"\r\n          onClick={e => {\r\n            toggle(e)\r\n            setMode(null)\r\n          }}\r\n        >\r\n          {(secondary && secondary.label) || 'Cancel'}\r\n        </button>\r\n      </ModalFooter>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default CustomModal\r\n","import React, { useState } from 'react'\r\n\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap'\r\n\r\nconst CustomModal = ({\r\n  label,\r\n  primary,\r\n  secondary,\r\n  modal,\r\n  toggle,\r\n  className,\r\n  title,\r\n  ...rest\r\n}) => {\r\n  const [codeNo, setCodeNo] = useState('')\r\n\r\n  const errorMessage = () => {\r\n    if (!codeNo) return '\"Policy Number\" is not allowed to be empty'\r\n\r\n    if (codeNo && !codeNo.match(/^[a-zA-Z0-9-]+$/))\r\n      return '\"Policy Number\" must only have a number and letter with hyphen'\r\n    if (codeNo && codeNo.length !== 15)\r\n      return '\"Policy Number\" must be equal to 15 characters long'\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Modal isOpen={modal} toggle={toggle} className={`${className}`} {...rest}>\r\n      <ModalHeader toggle={toggle}>{title}</ModalHeader>\r\n\r\n      <ModalBody>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"codeNo\">Enter Policy Number</label>\r\n          <div className=\"input-group mb-2\">\r\n            <input\r\n              name=\"codeNo\"\r\n              id=\"codeNo\"\r\n              value={codeNo}\r\n              onChange={e => setCodeNo(e.target.value)}\r\n              className=\"form-control\"\r\n            />\r\n          </div>\r\n\r\n          <p className=\"error-message text-danger p-1\">{errorMessage()}</p>\r\n\r\n          <style jsx=\"\">{`\r\n            .error-message {\r\n              font-size: 13px;\r\n            }\r\n          `}</style>\r\n        </div>\r\n      </ModalBody>\r\n\r\n      <ModalFooter>\r\n        <button\r\n          className={`btn btn-${(primary && primary.type) || 'primary'} btn-sm`}\r\n          name=\"primary\"\r\n          onClick={e => {\r\n            if (errorMessage()) return\r\n            toggle(e, codeNo)\r\n            setCodeNo(null)\r\n          }}\r\n        >\r\n          {(primary && primary.label) || 'Ok'}\r\n        </button>\r\n        <button\r\n          className={`btn btn-${(secondary && secondary.type) ||\r\n            'secondary'} btn-sm`}\r\n          name=\"secondary\"\r\n          onClick={e => {\r\n            toggle(e)\r\n            setCodeNo(null)\r\n          }}\r\n        >\r\n          {(secondary && secondary.label) || 'Cancel'}\r\n        </button>\r\n      </ModalFooter>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default CustomModal\r\n","import React, { useState, useContext, useEffect } from 'react'\r\nimport Table from '../../common/table'\r\nimport useReport from '../../../hooks/useReport'\r\nimport { sortBy } from '../../../services/utilsService'\r\nimport { Link } from 'react-router-dom'\r\nimport { formatDate } from './../../../services/utilsService'\r\nimport { restoreUser } from './../../../services/userService'\r\nimport { ClientContext } from '../../../context'\r\nimport EnforcedModal from '../../common/modalEnforced'\r\nimport ApprovedModal from '../../common/modalApproved'\r\nimport Spinner from './../../common/spinner'\r\n\r\nconst Reports = props => {\r\n  //let name = new URLSearchParams(props.location.search).get('name')\r\n  const { name } = props.match.params\r\n\r\n  const [sortColumn, setSortColumn] = useState({ path: 'name', order: 'asc' })\r\n\r\n  const { reports, setReports, setRefresh, isLoaded } = useReport(name)\r\n\r\n  const [client, setClient] = useState(null)\r\n\r\n  const { onApproved, onCancelled, onRetrieved, onEnforced } = useContext(\r\n    ClientContext\r\n  )\r\n\r\n  const handleSort = sortColumn => {\r\n    setSortColumn(sortColumn)\r\n    setReports(sortBy(reports, sortColumn))\r\n  }\r\n\r\n  const calculateAge = date => {\r\n    if (!date) return 'N/A'\r\n    const birthdate = new Date(formatDate(date))\r\n\r\n    const ageDif = Date.now() - birthdate.getTime()\r\n    const ageDate = new Date(ageDif)\r\n    return Math.abs(ageDate.getUTCFullYear() - 1970)\r\n  }\r\n\r\n  const enforcedCol = [\r\n    {\r\n      path: 'id',\r\n      label: '#'\r\n    },\r\n    {\r\n      path: 'firstname',\r\n      label: 'Fullname',\r\n      content: client =>\r\n        `${client.firstname}, ${client.lastname} ${client.middlename}`\r\n    },\r\n    {\r\n      path: 'birthdate',\r\n      label: 'Age',\r\n      content: client => calculateAge(client.birthdate)\r\n    },\r\n    {\r\n      path: 'gender',\r\n      label: 'Gender'\r\n    },\r\n    {\r\n      path: 'codeNo',\r\n      label: 'Code Number'\r\n    },\r\n    {\r\n      path: 'mode',\r\n      label: 'Mode'\r\n    },\r\n    {\r\n      path: 'dateInsured',\r\n      label: 'Date Insured',\r\n      content: client => formatDate(client.dateInsured)\r\n    },\r\n    {\r\n      key: 'actions',\r\n      label: 'Actions',\r\n      content: client => (\r\n        <div className=\"row pl-1 pt-1 pr-1\">\r\n          <div className=\"d-flex justify-content-between\">\r\n            <Link to={`/clients/edit/${client.id}`}>\r\n              <button className=\"btn btn-sm btn-outline-warning ml-1\">\r\n                EDIT\r\n              </button>\r\n            </Link>\r\n            <button\r\n              onClick={e => {\r\n                onCancelled(client.id).then(data => setRefresh(r => !r))\r\n              }}\r\n              className=\"btn btn-sm btn-outline-danger ml-1\"\r\n              name=\"delete\"\r\n            >\r\n              CANCELLED\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  ]\r\n\r\n  const forApprovalCol = [\r\n    {\r\n      path: 'id',\r\n      label: '#'\r\n    },\r\n    {\r\n      path: 'firstname',\r\n      label: 'Fullname',\r\n      content: client =>\r\n        `${client.firstname}, ${client.lastname} ${client.middlename}`\r\n    },\r\n    {\r\n      path: 'mode',\r\n      label: 'Mode'\r\n    },\r\n    {\r\n      path: 'dateInsured',\r\n      label: 'Date Insured',\r\n      content: client => formatDate(client.dateInsured)\r\n    },\r\n    {\r\n      key: 'actions',\r\n      label: 'Actions',\r\n      content: client => (\r\n        <div className=\"row pl-1 pt-1 pr-1\">\r\n          <div className=\"d-flex justify-content-between\">\r\n            <button\r\n              onClick={e => {\r\n                setClient(client)\r\n                toggleApproved(e)\r\n              }}\r\n              className=\"btn btn-sm btn-outline-success ml-1\"\r\n              name=\"delete\"\r\n            >\r\n              APPROVED\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  ]\r\n\r\n  const lapsedCol = [\r\n    {\r\n      path: 'id',\r\n      label: '#'\r\n    },\r\n    {\r\n      path: 'firstname',\r\n      label: 'Fullname',\r\n      content: client =>\r\n        `${client.firstname}, ${client.lastname} ${client.middlename}`\r\n    },\r\n    {\r\n      path: 'birthdate',\r\n      label: 'Age',\r\n      content: client => calculateAge(client.birthdate)\r\n    },\r\n\r\n    {\r\n      path: 'gender',\r\n      label: 'Gender'\r\n    },\r\n    {\r\n      path: 'mode',\r\n      label: 'Mode'\r\n    },\r\n    {\r\n      path: 'dateInsured',\r\n      label: 'Date Insured',\r\n      content: client => formatDate(client.dateInsured)\r\n    },\r\n    {\r\n      path: 'expiredDate',\r\n      label: 'Due Date',\r\n      content: client => formatDate(client.expiredDate)\r\n    },\r\n    {\r\n      key: 'actions',\r\n      label: 'Actions',\r\n      content: client => (\r\n        <div className=\"row pl-1 pt-1 pr-1\">\r\n          <div className=\"d-flex justify-content-between\">\r\n            <button\r\n              onClick={e => {\r\n                setClient(client)\r\n                toggleEnforced(e)\r\n              }}\r\n              className=\"btn btn-sm btn-outline-success ml-1\"\r\n              name=\"delete\"\r\n            >\r\n              ENFORCED\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  ]\r\n\r\n  const nearExpirationCol = [\r\n    {\r\n      path: 'id',\r\n      label: '#'\r\n    },\r\n    {\r\n      path: 'firstname',\r\n      label: 'Fullname',\r\n      content: client =>\r\n        `${client.firstname}, ${client.lastname} ${client.middlename}`\r\n    },\r\n    {\r\n      path: 'birthdate',\r\n      label: 'Age',\r\n      content: client => calculateAge(client.birthdate)\r\n    },\r\n    {\r\n      path: 'gender',\r\n      label: 'Gender'\r\n    },\r\n    {\r\n      path: 'mode',\r\n      label: 'Mode'\r\n    },\r\n    {\r\n      path: 'dateInsured',\r\n      label: 'Date Insured',\r\n      content: client => formatDate(client.dateInsured)\r\n    },\r\n    {\r\n      path: 'expiredDate',\r\n      label: 'Due Date',\r\n      content: client => formatDate(client.expiredDate)\r\n    }\r\n  ]\r\n\r\n  const cancelledCol = [\r\n    {\r\n      path: 'id',\r\n      label: '#'\r\n    },\r\n    {\r\n      path: 'firstname',\r\n      label: 'Fullname',\r\n      content: client =>\r\n        `${client.firstname}, ${client.lastname} ${client.middlename}`\r\n    },\r\n\r\n    {\r\n      path: 'birthdate',\r\n      label: 'Age',\r\n      content: client => calculateAge(client.birthdate)\r\n    },\r\n    {\r\n      path: 'gender',\r\n      label: 'Gender'\r\n    },\r\n    {\r\n      path: 'codeNo',\r\n      label: 'Code Number'\r\n    },\r\n    {\r\n      path: 'mode',\r\n      label: 'Mode'\r\n    },\r\n    {\r\n      path: 'dateInsured',\r\n      label: 'Date Insured',\r\n      content: client => formatDate(client.dateInsured)\r\n    },\r\n    {\r\n      key: 'actions',\r\n      label: 'Actions',\r\n      content: client => (\r\n        <div className=\"row pl-1 pt-1 pr-1\">\r\n          <div className=\"d-flex justify-content-between\">\r\n            <button\r\n              onClick={e => {\r\n                onRetrieved(client.id).then(data => setRefresh(r => !r))\r\n              }}\r\n              className=\"btn btn-sm btn-outline-success ml-1\"\r\n              name=\"delete\"\r\n            >\r\n              RETRIEVED\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  ]\r\n\r\n  const gpaCol = [\r\n    {\r\n      path: 'id',\r\n      label: '#'\r\n    },\r\n    {\r\n      path: 'firstname',\r\n      label: 'Fullname',\r\n      content: client =>\r\n        `${client.firstname}, ${client.lastname} ${client.middlename}`\r\n    },\r\n    {\r\n      path: 'birthdate',\r\n      label: 'Age',\r\n      content: client => calculateAge(client.birthdate)\r\n    },\r\n    {\r\n      path: 'gender',\r\n      label: 'Gender'\r\n    },\r\n    {\r\n      path: 'codeNo',\r\n      label: 'Policy #'\r\n    },\r\n    {\r\n      path: 'coverage',\r\n      label: 'Coverage(Year)'\r\n    }\r\n  ]\r\n\r\n  const archivedCol = [\r\n    {\r\n      path: 'id',\r\n      label: '#'\r\n    },\r\n    {\r\n      path: 'username',\r\n      label: 'Username'\r\n    },\r\n    {\r\n      path: 'profile.lastname',\r\n      key: 'fullname',\r\n      label: 'Fullname',\r\n      content: user =>\r\n        user.profile\r\n          ? `${user.profile.firstname}, ${user.profile.middlename} ${user.profile.lastname}`\r\n          : ''\r\n    },\r\n\r\n    {\r\n      path: 'position',\r\n      label: 'Position'\r\n    },\r\n    {\r\n      path: 'profile.branch.name',\r\n      label: 'Branch'\r\n    },\r\n    {\r\n      path: 'profile.codeNo',\r\n      key: 'codeNo',\r\n      label: 'Code #',\r\n      content: ({ profile }) => (profile ? profile.codeNo : '')\r\n    },\r\n    {\r\n      key: 'actions',\r\n      label: 'Actions',\r\n      content: user => (\r\n        <div className=\"row pl-1 pt-1 pr-1\">\r\n          <div className=\"d-flex justify-content-around\">\r\n            <button\r\n              onClick={() =>\r\n                restoreUser(user.id).then(data => setRefresh(r => !r))\r\n              }\r\n              className=\"btn btn-sm btn-outline-primary ml-1\"\r\n            >\r\n              RESTORE\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n  ]\r\n\r\n  const columns = () => {\r\n    switch (name) {\r\n      case 'enforced':\r\n        return enforcedCol\r\n      case 'for-approval':\r\n        return forApprovalCol\r\n      case 'lapsed':\r\n        return lapsedCol\r\n\r\n      case 'cancelled':\r\n        return cancelledCol\r\n      case 'near-expiration':\r\n        return nearExpirationCol\r\n      case 'gpa':\r\n        return gpaCol\r\n      case 'user-archived':\r\n        return archivedCol\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  const title = () => {\r\n    switch (name) {\r\n      case 'enforced':\r\n        return 'Enforced Policy'\r\n      case 'for-approval':\r\n        return 'For Approval'\r\n      case 'lapsed':\r\n        return 'Lapsed Policy'\r\n\r\n      case 'cancelled':\r\n        return 'Cancelled Policy'\r\n      case 'near-expiration':\r\n        return 'Near Expiration'\r\n      case 'gpa':\r\n        return 'GPA'\r\n      case 'user-archived':\r\n        return 'User Archived'\r\n      default:\r\n        return 'Reports'\r\n    }\r\n  }\r\n\r\n  const [modalEnforced, setModalEnforced] = useState(false)\r\n\r\n  const toggleEnforced = (e, client) => {\r\n    setModalEnforced(modal => !modal)\r\n    if (e.target && e.target.name === 'primary') {\r\n      onEnforced(client).then(data => {\r\n        setRefresh(r => !r)\r\n        setClient(null)\r\n      })\r\n    }\r\n  }\r\n\r\n  const renderModalEnforced = client => {\r\n    return (\r\n      <EnforcedModal\r\n        client={client}\r\n        title=\"Cocolife\"\r\n        modal={modalEnforced}\r\n        toggle={toggleEnforced}\r\n        label={`Enforce ${client.firstname}?`}\r\n        primary={{ type: 'primary', label: 'CONFIRM' }}\r\n      />\r\n    )\r\n  }\r\n\r\n  const [modalApproved, setModalApproved] = useState(false)\r\n\r\n  const toggleApproved = (e, codeNo) => {\r\n    setModalApproved(modal => !modal)\r\n    if (e.target && e.target.name === 'primary') {\r\n      onApproved(client.id, codeNo).then(data => {\r\n        setClient(null)\r\n        setRefresh(r => !r)\r\n      })\r\n    }\r\n  }\r\n\r\n  const renderModalApproved = () => {\r\n    return (\r\n      <ApprovedModal\r\n        title=\"Cocolife\"\r\n        modal={modalApproved}\r\n        toggle={toggleApproved}\r\n        primary={{ type: 'primary', label: 'CONFIRM' }}\r\n      />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {client && renderModalEnforced(client)}\r\n      {renderModalApproved()}\r\n      <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-2 mb-3 border-bottom\">\r\n        <h1 className=\"h2\">{title()}</h1>\r\n        <button className=\"btn btn-sm btn-grad-secondary \">\r\n          <span className=\"fa fa-print mr-1\"></span>\r\n          PRINT\r\n        </button>\r\n      </div>\r\n      <div className=\"wrapper-client\">\r\n        <Spinner isLoaded={isLoaded} className=\"spinner mt-5 pt-5\">\r\n          <Table\r\n            columns={columns()}\r\n            data={reports}\r\n            sortColumn={sortColumn}\r\n            onSort={handleSort}\r\n          />\r\n          {isLoaded && reports.length === 0 && (\r\n            <h6 className=\"mt-2 mb-5\">No records found!</h6>\r\n          )}\r\n        </Spinner>\r\n      </div>\r\n      <style jsx=\"\">{`\r\n        .fa-print {\r\n          margin-top: 0 !important;\r\n        }\r\n        .wrapper-client {\r\n          margin: 0;\r\n          padding: 0;\r\n          height: 550px;\r\n          overflow-y: auto;\r\n          overflow-x: hidden;\r\n        }\r\n      `}</style>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Reports\r\n","import React, { Component } from 'react'\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"col-12 pt-3 mb-3 footer d-flex justify-content-center\">\r\n      <p className=\"text-white\">Copyright 2019</p>\r\n      <style jsx=\"\">{`\r\n        .footer {\r\n          background-color: #343a40;\r\n          border-radius: 0 0 7px 7px;\r\n          height: 60px !important;\r\n        }\r\n      `}</style>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import { useEffect, useReducer } from 'react'\r\nimport { toast } from 'react-toastify'\r\nimport { pagination } from '../config.json'\r\n\r\nimport {\r\n  SET_ITEMS,\r\n  SET_PAGENUM,\r\n  SET_PAGES,\r\n  SET_TOTAL,\r\n  SET_REFRESH,\r\n  SEARCH_ITEMS,\r\n  SET_START,\r\n  SET_END,\r\n  SET_NOT_FOUND,\r\n  SET_STATUS,\r\n  SET_UNVERIFY\r\n} from './types'\r\n\r\nconst reducer = (state, action) => {\r\n  const { payload, type } = action\r\n  switch (type) {\r\n    case SET_PAGENUM:\r\n      return { ...state, pageNum: payload }\r\n    case SET_ITEMS:\r\n      return { ...state, items: payload }\r\n    case SET_PAGES:\r\n      return { ...state, pages: payload }\r\n    case SET_TOTAL:\r\n      return { ...state, total: payload }\r\n    case SET_START:\r\n      return { ...state, start: payload }\r\n    case SET_END:\r\n      return { ...state, end: payload }\r\n    case SET_REFRESH:\r\n      return { ...state, toggle: payload }\r\n    case SEARCH_ITEMS:\r\n      return { ...state, title: payload }\r\n    case SET_NOT_FOUND:\r\n      return { ...state, notFound: payload }\r\n    case SET_STATUS:\r\n      return { ...state, status: payload }\r\n    case SET_UNVERIFY:\r\n      return { ...state, unverify: payload }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst usePagination = ({\r\n  request,\r\n  data = 'data',\r\n  pages = 'lastPage',\r\n  total = 'total',\r\n  take = 15\r\n}) => {\r\n  const initialState = {\r\n    items: [],\r\n    pageNum: 1,\r\n    status: null,\r\n    unverify: 0,\r\n    pages: 0,\r\n    total: 0,\r\n    take,\r\n    toggle: false,\r\n    start: 1,\r\n    end: pagination.pageNumbers,\r\n    notFound: false\r\n  }\r\n  const [{ toggle, title, status, pageNum, ...rest }, dispatch] = useReducer(\r\n    reducer,\r\n    initialState\r\n  )\r\n\r\n  useEffect(() => {\r\n    request(pageNum, take, title, status)\r\n      .then(response => {\r\n        dispatch({ type: SET_ITEMS, payload: response[data] })\r\n        dispatch({ type: SET_PAGES, payload: response[pages] })\r\n        dispatch({ type: SET_TOTAL, payload: response[total] })\r\n        dispatch({ type: SET_UNVERIFY, payload: response['unverify'] })\r\n        dispatch({ type: SET_NOT_FOUND, payload: false })\r\n      })\r\n      .catch(({ response }) => {\r\n        if (response && response.status === 404) {\r\n          dispatch({ type: SET_ITEMS, payload: [] })\r\n          dispatch({ type: SET_PAGES, payload: 0 })\r\n          dispatch({ type: SET_PAGENUM, payload: 1 })\r\n          dispatch({ type: SET_NOT_FOUND, payload: true })\r\n        }\r\n      })\r\n  }, [toggle, title, pageNum, status])\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: SET_ITEMS, payload: [] })\r\n  }, [title, pageNum])\r\n\r\n  return {\r\n    state: { toggle, status, pageNum, take, ...rest },\r\n    dispatch\r\n  }\r\n}\r\n\r\nexport default usePagination\r\n","export const SET_ITEMS = 'SET_ITEMS' // array\r\nexport const SET_PAGENUM = 'SET_PAGENUM' // number, active page\r\nexport const SET_PAGES = 'SET_PAGES' // number, total no. of pages\r\nexport const SET_TOTAL = 'SET_TOTAL' // number, total no. of items\r\nexport const SET_REFRESH = 'SET_REFRESH' // boolean, do reload page\r\nexport const SET_START = 'SET_START'\r\nexport const SET_END = 'SET_END'\r\nexport const SEARCH_ITEMS = 'SEARCH_ITEMS'\r\nexport const DELETE_ITEM = 'DELETE_ITEM'\r\nexport const SET_NOT_FOUND = 'SET_NOT_FOUND'\r\n\r\nexport const SET_STATUS = 'SET_STATUS'\r\nexport const SET_UNVERIFY = 'SET_UNVERIFY'\r\n","import React, { memo, useEffect } from 'react'\r\nimport usePagination from '../hooks/usePagination'\r\nimport useUnverify from '../hooks/useUnverify'\r\n\r\nimport { UserContext } from '../context'\r\nimport { pagination } from '../config.json'\r\nimport { sortBy } from '../services/utilsService'\r\nimport { getPagedUsers, deleteUser } from '../services/userService'\r\nimport {\r\n  SET_REFRESH,\r\n  SET_ITEMS,\r\n  SET_PAGENUM,\r\n  SEARCH_ITEMS,\r\n  SET_START,\r\n  SET_END,\r\n  SET_STATUS\r\n} from '../hooks/types'\r\n\r\nconst UserProvider = props => {\r\n  const {\r\n    state: { pageNum, items: users, pages, total, ...rest },\r\n    dispatch\r\n  } = usePagination({ request: getPagedUsers, take: pagination.perPage })\r\n\r\n  const handleRefresh = () => {\r\n    dispatch({ type: SET_REFRESH, payload: toggle => !toggle })\r\n  }\r\n\r\n  const handleSetStatus = status => {\r\n    dispatch({ type: SET_STATUS, payload: status })\r\n  }\r\n\r\n  const handlePageChange = pageNum => {\r\n    dispatch({ type: SET_PAGENUM, payload: pageNum })\r\n  }\r\n\r\n  const handleDelete = async user => {\r\n    let originalUsers = [...users]\r\n\r\n    try {\r\n      const _users = originalUsers.filter(a => a.id !== user.id)\r\n\r\n      dispatch({ type: SET_ITEMS, payload: _users })\r\n\r\n      await deleteUser(user.id)\r\n      return _users.length > 0\r\n    } catch (error) {\r\n      dispatch({ type: SET_ITEMS, payload: originalUsers })\r\n      return originalUsers.length > 0\r\n    }\r\n  }\r\n\r\n  const handleSort = sortColumn => {\r\n    dispatch({ type: SET_ITEMS, payload: sortBy(users, sortColumn) })\r\n  }\r\n\r\n  const handleSearch = title => {\r\n    dispatch({ type: SEARCH_ITEMS, payload: title })\r\n  }\r\n\r\n  const handleSetStart = start => {\r\n    dispatch({ type: SET_START, payload: start })\r\n  }\r\n\r\n  const handleSetEnd = end => {\r\n    dispatch({ type: SET_END, payload: end })\r\n  }\r\n\r\n  return (\r\n    <UserContext.Provider\r\n      value={{\r\n        state: { users, pages, pageNum, total, ...rest },\r\n        onDelete: handleDelete,\r\n        onRefresh: handleRefresh,\r\n        onPageChange: handlePageChange,\r\n        onSort: handleSort,\r\n        onSearch: handleSearch,\r\n        onSetStart: handleSetStart,\r\n        onSetEnd: handleSetEnd,\r\n        onSetStatus: handleSetStatus\r\n      }}\r\n    >\r\n      {props.children}\r\n    </UserContext.Provider>\r\n  )\r\n}\r\n\r\nexport default memo(UserProvider)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { ClientContext } from '../context'\r\nimport {\r\n  getClient,\r\n  updateClient,\r\n  getStatus,\r\n  addClient,\r\n  approved,\r\n  cancelled,\r\n  retrieved,\r\n  enforced\r\n} from '../services/clientService'\r\n//import useClient from '../hooks/useClient'\r\n\r\nconst ClientProvider = props => {\r\n  const [status, setStatus] = useState({})\r\n\r\n  useEffect(() => {\r\n    getStatus().then(status => setStatus(status))\r\n  }, [])\r\n\r\n  const handleAddClient = async client => {\r\n    await addClient(client)\r\n    setStatus(await getStatus())\r\n  }\r\n\r\n  const handleApproved = async (id, codeNo) => {\r\n    await approved(id, codeNo)\r\n    setStatus(await getStatus())\r\n  }\r\n  const handleCancelled = async id => {\r\n    await cancelled(id)\r\n    setStatus(await getStatus())\r\n  }\r\n  const handleRetrieved = async id => {\r\n    await retrieved(id)\r\n    setStatus(await getStatus())\r\n  }\r\n\r\n  const handleEnforced = async client => {\r\n    await enforced(client)\r\n    setStatus(await getStatus())\r\n  }\r\n\r\n  const handleGetClient = async id => {\r\n    return await getClient(id)\r\n  }\r\n\r\n  const handleUpdateClient = async (id, client) => {\r\n    await updateClient(id, client)\r\n    //setStatus(await getStatus())\r\n  }\r\n\r\n  return (\r\n    <ClientContext.Provider\r\n      value={{\r\n        status,\r\n        onAddClient: handleAddClient,\r\n        onApproved: handleApproved,\r\n        onCancelled: handleCancelled,\r\n        onRetrieved: handleRetrieved,\r\n        onEnforced: handleEnforced,\r\n        onUpdateClient: handleUpdateClient,\r\n        getClient: handleGetClient\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ClientContext.Provider>\r\n  )\r\n}\r\n\r\nexport default ClientProvider\r\n","import React, { useState, useEffect } from 'react'\r\nimport { getUser } from './../../../services/userService'\r\nimport { cap } from '../../../services/utilsService'\r\nimport { appUrl } from '../../../config.json'\r\nimport Spinner from '../../common/spinner'\r\n\r\nconst ViewUser = props => {\r\n  const { id } = props.match.params\r\n  const [user, setUser] = useState({\r\n    username: '',\r\n    profile: {\r\n      firstname: '',\r\n      middlename: '',\r\n      lastname: '',\r\n      branch: { manager: '' }\r\n    }\r\n  })\r\n\r\n  useEffect(() => {\r\n    getUser(id)\r\n      .then(data => {\r\n        setUser(data)\r\n      })\r\n      .catch(() => props.history.replace('/not-found'))\r\n  }, [])\r\n\r\n  const isAgent = () => {\r\n    return user.position !== 'manager' && user.position !== 'admin'\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n     \r\n        <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-2 mb-3 border-bottom\">\r\n          <h1 className=\"h2\">User Overview</h1>\r\n        </div>\r\n        <Spinner isLoaded={user.username !== ''} className=\"spinner\">\r\n          <div className=\"row mb-3\">\r\n            <div className=\"col-4 pr-0\">\r\n              <div className=\"card\" style={{ width: 'auto' }}>\r\n                <img\r\n                  style={{\r\n                    padding: '10%',\r\n                    backgroundColor: '#343a40',\r\n                    height: '303px'\r\n                  }}\r\n                  src={`${appUrl}/user.png`}\r\n                  className=\"card-img-top\"\r\n                  alt=\"\"\r\n                />\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">{`${cap(\r\n                    user.profile.lastname\r\n                  )}, ${cap(user.profile.firstname)} ${cap(\r\n                    user.profile.middlename\r\n                  )}`}</h5>\r\n                  <p className=\"card-subtitle\">{cap(user.username)}</p>\r\n                  <span\r\n                    className={`mt-4 badge badge-${\r\n                      user.status === 1 ? 'success' : 'danger'\r\n                    }`}\r\n                  >\r\n                    {user.status === 1 ? 'active' : 'unverify'}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-8\">\r\n              <div className=\"card\" style={{ width: 'auto' }}>\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">Personal Details</h5>\r\n                  <br></br>\r\n                  <p className=\"card-subtitle\">\r\n                    Firstname:{' '}\r\n                    <span className=\"text-secondary\">\r\n                      {cap(user.profile.firstname)}\r\n                    </span>\r\n                  </p>\r\n                  <br></br>\r\n                  <p className=\"card-subtitle\">\r\n                    Middlename:{' '}\r\n                    <span className=\"text-secondary\">\r\n                      {cap(user.profile.middlename)}\r\n                    </span>\r\n                  </p>\r\n                  <br></br>\r\n                  <p className=\"card-subtitle\">\r\n                    Lastname:{' '}\r\n                    <span className=\"text-secondary\">\r\n                      {cap(user.profile.lastname)}\r\n                    </span>\r\n                  </p>\r\n                  <br></br>\r\n                  <p className=\"card-subtitle\">\r\n                    Email:{' '}\r\n                    <span className=\"text-secondary\">{user.profile.email}</span>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"card mt-3\" style={{ width: 'auto' }}>\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">Employment Details</h5>\r\n                  <br></br>\r\n                  <p className=\"card-subtitle\">\r\n                    Position:{'   '}\r\n                    <span className=\"text-secondary\">{cap(user.position)}</span>\r\n                  </p>\r\n                  <br></br>\r\n                  <p className=\"card-subtitle\">\r\n                    Branch:{'   '}\r\n                    <span className=\"text-secondary\">\r\n                      {cap(user.profile.branch ? user.profile.branch.name : '')}\r\n                    </span>\r\n                  </p>\r\n                  <br></br>\r\n                  <p className=\"card-subtitle\">\r\n                    Code Number:{'   '}\r\n                    <span className=\"text-secondary\">\r\n                      {cap(user.profile.codeNo)}\r\n                    </span>\r\n                  </p>\r\n                  <br></br>\r\n                  {isAgent() && (\r\n                    <p className=\"card-subtitle\">\r\n                      Under by:{'   '}\r\n                      <span className=\"text-secondary\">\r\n                        {cap(user.profile.branch.manager) + ' - manager'}\r\n                      </span>\r\n                    </p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Spinner>\r\n        <style jsx=\"\">{`\r\n         \r\n          .spinner {\r\n            margin-top: 200px;\r\n            margin-bottom: 200px;\r\n          }\r\n        `}</style>\r\n     \r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default ViewUser\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport Joi from 'joi-browser'\r\nimport {\r\n  getBranches,\r\n  getManager,\r\n  getUser,\r\n  editUser\r\n} from '../../../services/userService'\r\nimport { toast } from 'react-toastify'\r\nimport { cap, joiLettersOnly } from '../../../services/utilsService'\r\nimport withAuth from '../../hoc/withAuth'\r\nimport Form from './../../common/form'\r\nimport Spinner from './../../common/spinner'\r\n\r\nimport { UserContext } from './../../../context'\r\n\r\nconst EditUser = ({ auth, ...props }) => {\r\n  const { onRefresh } = useContext(UserContext)\r\n  const { id } = props.match.params\r\n  const [user, setUser] = useState({\r\n    username: '',\r\n    email: '',\r\n    firstname: '',\r\n    middlename: '',\r\n    lastname: '',\r\n    manager: '',\r\n    codeNo: '',\r\n    position: '',\r\n    branch: ''\r\n  })\r\n  const [isLoaded, setIsLoaded] = useState(false)\r\n\r\n  useEffect(() => {\r\n    setIsLoaded(false)\r\n    getUser(id).then(({ profile, username, position }) => {\r\n      setUser({\r\n        username,\r\n        email: profile.email,\r\n        firstname: profile.firstname,\r\n        middlename: profile.middlename,\r\n        lastname: profile.lastname,\r\n        codeNo: profile.codeNo,\r\n        manager: profile.branch ? profile.branch.manager : '',\r\n        branch: profile.branch ? profile.branch.name : '',\r\n        position\r\n      })\r\n      setSelectedPosition({\r\n        id: position === 'sales' ? 1 : 2,\r\n        value: position,\r\n        label: cap(position + (position !== 'manager' ? ' officer' : ''))\r\n      })\r\n      setSelectedBranch({\r\n        id: profile.branch_id,\r\n        value: profile.branch ? profile.branch.name : '',\r\n        label: cap(profile.branch ? profile.branch.name : '')\r\n      })\r\n\r\n      const url =\r\n        position === 'manager'\r\n          ? '/api/branches/available'\r\n          : '/api/branches/taken'\r\n\r\n      getBranches(url).then(branches => {\r\n        setBranches(branches)\r\n        setIsLoaded(true)\r\n      })\r\n    })\r\n    // .catch(() => props.history.replace('/not-found'))\r\n  }, [])\r\n\r\n  const agents = [\r\n    {\r\n      id: 1,\r\n      label: 'Sales Officer',\r\n      value: 'sales'\r\n    },\r\n    {\r\n      id: 2,\r\n      label: 'Promo Officer',\r\n      value: 'promo'\r\n    }\r\n  ]\r\n\r\n  const [branches, setBranches] = useState([])\r\n\r\n  const [selectedPosition, setSelectedPosition] = useState([])\r\n  const [selectedBranch, setSelectedBranch] = useState(null)\r\n\r\n  const [errors, setErrors] = useState({})\r\n\r\n  const schema = {\r\n    username: Joi.string()\r\n      .required()\r\n      .min(6)\r\n      .label('Username'),\r\n    email: Joi.string()\r\n      .required()\r\n      .label('Email'),\r\n    firstname: joiLettersOnly('Firstname'),\r\n    middlename: joiLettersOnly('Middlename'),\r\n    lastname: joiLettersOnly('Lastname'),\r\n    position: Joi.string()\r\n      .required()\r\n      .label('Position'),\r\n    branch: Joi.string()\r\n      .required()\r\n      .label('Branch'),\r\n    manager: Joi.optional(),\r\n    codeNo: Joi.number()\r\n      .required()\r\n      .min(8)\r\n      .label('Code Number')\r\n  }\r\n\r\n  const handleChangePosition = selectedPosition =>\r\n    setSelectedPosition(selectedPosition)\r\n\r\n  const handleChangeBranch = selectedBranch => {\r\n    setSelectedBranch(selectedBranch)\r\n\r\n    if (!isAgent() || !selectedBranch) return\r\n\r\n    getManager(selectedBranch.id).then(username => {\r\n      setUser({ ...user, manager: username, branch: selectedBranch.value })\r\n    })\r\n  }\r\n\r\n  const handleSubmit = async (\r\n    e,\r\n    {\r\n      username,\r\n      email,\r\n      password,\r\n      firstname,\r\n      middlename,\r\n      lastname,\r\n      position,\r\n      codeNo\r\n    }\r\n  ) => {\r\n    const user = {\r\n      username,\r\n      password,\r\n      position,\r\n      profile: {\r\n        firstname,\r\n        middlename,\r\n        lastname,\r\n        email,\r\n        codeNo,\r\n        branch_id: selectedBranch ? selectedBranch.id : null\r\n      }\r\n    }\r\n\r\n    try {\r\n      await editUser(id, user)\r\n      // console.log(user)\r\n      toast.success('Updated!')\r\n\r\n      // setUser({\r\n      //   username: '',\r\n      //   email: '',\r\n      //   password: '',\r\n      //   firstname: '',\r\n      //   middlename: '',\r\n      //   lastname: '',\r\n      //   codeNo: '',\r\n      //   confirmPassword: ''\r\n      // })\r\n\r\n      // setSelectedBranch(null)\r\n      // setSelectedPosition(null)\r\n\r\n      //fetchBranches(setBranches)\r\n\r\n      setErrors(errors)\r\n\r\n      onRefresh()\r\n\r\n      props.history.replace('/users')\r\n    } catch ({ response }) {\r\n      if (response && response.status === 400) {\r\n        toast.error(response.data.status.errors[0].message)\r\n      }\r\n    }\r\n  }\r\n\r\n  const isAgent = () => {\r\n    return user.position !== 'manager' && user.position !== 'admin'\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-2 mb-3 border-bottom\">\r\n        <h1 className=\"h2\">Edit User</h1>\r\n      </div>\r\n\r\n      <Spinner isLoaded={isLoaded} className=\"spinner\">\r\n        <Form\r\n          data={{ data: user, setData: setUser }}\r\n          errors={{ errors, setErrors }}\r\n          onSubmit={handleSubmit}\r\n          schema={schema}\r\n        >\r\n          {({ renderInput, renderSelect, renderButton }) => {\r\n            return (\r\n              <React.Fragment>\r\n                <div className=\"row m-1\">\r\n                  <div className=\"col-6 pl-5 pr-3 pt-4\">\r\n                    {renderInput('firstname', 'Firstname')}\r\n                    {renderInput('middlename', 'Middlename')}\r\n                    {renderInput('lastname', 'Lastname')}\r\n                    {renderSelect(\r\n                      'position',\r\n                      'Position',\r\n                      selectedPosition,\r\n                      handleChangePosition,\r\n                      agents,\r\n                      {\r\n                        isDisabled: user.position === 'manager' ? true : false\r\n                      }\r\n                    )}\r\n                    {renderInput('codeNo', 'Code Number')}\r\n                    {renderSelect(\r\n                      'branch',\r\n                      'Branch',\r\n                      selectedBranch,\r\n                      handleChangeBranch,\r\n                      branches\r\n                    )}\r\n\r\n                    {isAgent() &&\r\n                      renderInput('manager', 'Manager', 'manager', '', {\r\n                        disabled: true\r\n                      })}\r\n                  </div>\r\n                  <div className=\"col-6 pl-3 pr-5 pt-4\">\r\n                    {renderInput('username', 'Username', 'text', 'fa-user')}\r\n                    {renderInput('email', 'Email', 'email', 'fa-envelope')}\r\n                    {renderButton('Update', null, 'Updating...', true)}\r\n                    <button\r\n                      onClick={e => {\r\n                        e.preventDefault()\r\n                        props.history.replace('/users')\r\n                      }}\r\n                      className=\"btn btn-grad-secondary btn-block\"\r\n                      name=\"back\"\r\n                    >\r\n                      Back\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </React.Fragment>\r\n            )\r\n          }}\r\n        </Form>\r\n      </Spinner>\r\n\r\n      <style jsx=\"\">{`\r\n        .col-4 {\r\n          padding: 0;\r\n        }\r\n        .row {\r\n          border-radius: 5px;\r\n        }\r\n        .side-content {\r\n          background-color: #343a40;\r\n          border-radius: 0 5px 5px 0;\r\n        }\r\n        .spinner {\r\n          margin-top: 200px;\r\n          margin-bottom: 200px;\r\n        }\r\n      `}</style>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default withAuth(EditUser)\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport Joi from 'joi-browser'\r\nimport Form from '../../common/form'\r\nimport { getBranches, addManager } from '../../../services/userService'\r\nimport { toast } from 'react-toastify'\r\nimport { cap, joiLettersOnly } from '../../../services/utilsService'\r\nimport withAuth from './../../hoc/withAuth'\r\nimport Spinner from './../../common/spinner'\r\nimport { UserContext } from './../../../context'\r\n\r\nconst NewManager = ({ auth, ...props }) => {\r\n  const [user, setUser] = useState({\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n    firstname: '',\r\n    middlename: '',\r\n    lastname: '',\r\n    codeNo: '',\r\n    branch: '',\r\n    confirmPassword: ''\r\n  })\r\n\r\n  const { onRefresh } = useContext(UserContext)\r\n\r\n  const [branches, setBranches] = useState([])\r\n  const [hasBranches, setHasBranches] = useState(false)\r\n\r\n  const fetchBranches = setBranches => {\r\n    getBranches('/api/branches/available').then(branches => {\r\n      setBranches(branches)\r\n      setHasBranches(branches.length > 0)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchBranches(setBranches)\r\n  }, [])\r\n\r\n  const [selectedBranch, setSelectedBranch] = useState(null)\r\n\r\n  const [errors, setErrors] = useState({})\r\n\r\n  const schema = {\r\n    username: Joi.string()\r\n      .required()\r\n      .min(6)\r\n      .label('Username'),\r\n    email: Joi.string()\r\n      .required()\r\n      .label('Email'),\r\n    password: Joi.string()\r\n      .required()\r\n      .min(6)\r\n      .label('Password'),\r\n    confirmPassword: Joi.string()\r\n      .required()\r\n      .valid(Joi.ref('password'))\r\n      .options({ language: { any: { allowOnly: 'not match' } } })\r\n      .label('Password'),\r\n    firstname: joiLettersOnly('Firstname'),\r\n    middlename: joiLettersOnly('Middlename'),\r\n    lastname: joiLettersOnly('Lastname'),\r\n    branch: Joi.string()\r\n      .required()\r\n      .label('Branch'),\r\n    codeNo: Joi.number()\r\n      .required()\r\n      .min(8)\r\n      .label('Code Number')\r\n  }\r\n\r\n  const handleCheckUser = async ({ currentTarget: input }) => {\r\n    const { isTaken } = await auth.isUsernameTaken(input.value)\r\n\r\n    const _errors = { ...errors }\r\n\r\n    if (isTaken) {\r\n      _errors[input.name] = `\"${input.value}\" is taken`\r\n    }\r\n\r\n    setErrors(_errors)\r\n\r\n    return _errors\r\n  }\r\n\r\n  const handleSubmit = async (\r\n    e,\r\n    { username, email, password, firstname, middlename, lastname, codeNo }\r\n  ) => {\r\n    const _errors = await handleCheckUser(e)\r\n\r\n    if (Object.keys(_errors).length > 0) {\r\n      setErrors(_errors)\r\n      return\r\n    }\r\n\r\n    const user = {\r\n      username,\r\n      password,\r\n      position: 'manager',\r\n      profile: {\r\n        firstname,\r\n        middlename,\r\n        lastname,\r\n        email,\r\n        codeNo,\r\n        branch_id: selectedBranch ? selectedBranch.id : 0\r\n      }\r\n    }\r\n\r\n    try {\r\n      await addManager(user)\r\n\r\n      toast.success('Created!')\r\n\r\n      setUser({\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        firstname: '',\r\n        middlename: '',\r\n        lastname: '',\r\n        codeNo: '',\r\n        confirmPassword: ''\r\n      })\r\n\r\n      setSelectedBranch(null)\r\n\r\n      fetchBranches(setBranches)\r\n\r\n      setErrors(_errors)\r\n\r\n      onRefresh()\r\n\r\n      props.history.replace('/users')\r\n    } catch ({ response }) {\r\n      if (response && (response.status === 400 || response.status === 401)) {\r\n        toast.error(response.data.status.errors)\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleChangeBranch = selectedBranch => {\r\n    setSelectedBranch(selectedBranch)\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"col-12 d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-2 mb-4 border-bottom\">\r\n        <h1 className=\"h2\">Add New Manager</h1>\r\n      </div>\r\n      <Form\r\n        data={{ data: user, setData: setUser }}\r\n        errors={{ errors, setErrors }}\r\n        onSubmit={handleSubmit}\r\n        schema={schema}\r\n      >\r\n        {({ renderInput, renderSelect, renderButton }) => {\r\n          return (\r\n            <React.Fragment>\r\n              <div className=\"row mb-3 mr-0\">\r\n                <div className=\"col-6 pl-3 pr-2 pt-3\">\r\n                  {renderInput('firstname', 'Firstname')}\r\n                  {renderInput('middlename', 'Middlename')}\r\n                  {renderInput('lastname', 'Lastname')}\r\n\r\n                  {renderInput('codeNo', 'Code Number')}\r\n                  {!hasBranches && (\r\n                    <React.Fragment>\r\n                      <label>No Available Branch</label>\r\n                      <br />\r\n                      <button\r\n                        onClick={() => props.history.replace('/branches/new')}\r\n                        className=\"btn btn-sm btn-outline-success ml-1\"\r\n                      >\r\n                        <span className=\"fa fa-plus mr-1\"></span>\r\n                        BRANCH\r\n                      </button>\r\n                    </React.Fragment>\r\n                  )}\r\n                  {hasBranches &&\r\n                    renderSelect(\r\n                      'branch',\r\n                      'Available Branch',\r\n                      selectedBranch,\r\n                      handleChangeBranch,\r\n                      branches\r\n                    )}\r\n                </div>\r\n                <div className=\"col-6 pl-2 pr-3 pt-3\">\r\n                  {renderInput('username', 'Username', 'text', 'fa-user', {\r\n                    onBlur: handleCheckUser\r\n                  })}\r\n                  {renderInput('email', 'Email', 'email', 'fa-envelope')}\r\n                  {renderInput('password', 'Password', 'password', 'fa-key')}\r\n                  {renderInput(\r\n                    'confirmPassword',\r\n                    'Confirm Password',\r\n                    'password',\r\n                    'fa-key'\r\n                  )}\r\n                  {renderButton('Add', null, 'Saving...', true)}\r\n                </div>\r\n              </div>\r\n            </React.Fragment>\r\n          )\r\n        }}\r\n      </Form>\r\n\r\n      <style jsx=\"\">{`\r\n        .col-4 {\r\n          padding: 0;\r\n        }\r\n        .row {\r\n          border-radius: 7px;\r\n        }\r\n        .side-content {\r\n          background-color: #343a40;\r\n          border-radius: 7px 0 0 7px;\r\n        }\r\n        .fa-plus {\r\n          margin-top: 0 !important;\r\n        }\r\n      `}</style>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default withAuth(NewManager)\r\n","import React, { useState, useEffect } from 'react'\r\nimport Form from '../../common/form'\r\nimport Joi from 'joi-browser'\r\nimport { getBranch, updateBranch } from '../../../services/userService'\r\nimport Spinner from '../../common/spinner'\r\nimport { toast } from 'react-toastify'\r\n\r\nconst EditBranch = props => {\r\n  const { id } = props.match.params\r\n  const [isLoaded, setIsLoaded] = useState(false)\r\n  const [branch, setBranch] = useState({ name: '', address: '', contact: '' })\r\n  const [errors, setErrors] = useState({})\r\n\r\n  useEffect(() => {\r\n    setIsLoaded(false)\r\n    getBranch(id).then(({ branch: { name, address, contact } }) => {\r\n      setBranch({ name, address, contact })\r\n      setIsLoaded(true)\r\n    })\r\n  }, [])\r\n\r\n  const schema = {\r\n    name: Joi.string()\r\n      .required()\r\n      .label('Name'),\r\n    address: Joi.optional(),\r\n    contact: Joi.optional()\r\n  }\r\n\r\n  const handleSubmit = async (e, branch) => {\r\n    try {\r\n      updateBranch(id, branch).then(() => props.history.replace('/branches'))\r\n      toast.success(`Saved`)\r\n    } catch ({ response }) {\r\n      if (response && response.status === 401) {\r\n        toast.error(response.data.status.errors)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-2 mb-3 border-bottom\">\r\n        <h1 className=\"h2\">Branch</h1>\r\n      </div>\r\n      <Spinner isLoaded={isLoaded} className=\"spinner\">\r\n        <div className=\"col-6 offset-3\">\r\n          <Form\r\n            data={{ data: branch, setData: setBranch }}\r\n            errors={{ errors, setErrors }}\r\n            onSubmit={handleSubmit}\r\n            schema={schema}\r\n          >\r\n            {({ renderInput, renderButton, renderTextArea }) => {\r\n              return (\r\n                <React.Fragment>\r\n                  {renderInput('name', 'Name', 'name', '')}\r\n                  {renderTextArea('address', 'Address', 'address')}\r\n                  {renderInput('contact', 'Contact', 'contact')}\r\n                  {renderButton('UPDATE', null, 'Updating...', true)}\r\n                </React.Fragment>\r\n              )\r\n            }}\r\n          </Form>\r\n          <button\r\n            onClick={e => {\r\n              e.preventDefault()\r\n              props.history.replace('/branches')\r\n            }}\r\n            className=\"btn btn-grad-secondary btn-block mt-3\"\r\n            name=\"back\"\r\n          >\r\n            Back\r\n          </button>\r\n        </div>\r\n      </Spinner>\r\n      <style jsx=\"\">{`\r\n        .spinner {\r\n          margin-top: 200px;\r\n        }\r\n      `}</style>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default EditBranch\r\n","import React, { useState, useContext, useEffect } from 'react'\r\nimport Form from '../../common/form'\r\nimport { toast } from 'react-toastify'\r\nimport Joi from 'joi-browser'\r\nimport { formatDate, cap, joiLettersOnly } from '../../../services/utilsService'\r\nimport auth from '../../../services/authService'\r\nimport { ClientContext } from '../../../context'\r\nimport Spinner from './../../common/spinner'\r\n\r\nconst EditClient = props => {\r\n  const { id } = props.match.params\r\n  const [isLoaded, setIsLoaded] = useState(false)\r\n\r\n  const { getClient, onUpdateClient, status } = useContext(ClientContext)\r\n\r\n  const [client, setClient] = useState({\r\n    firstname: '',\r\n    lastname: '',\r\n    middlename: '',\r\n    address: '',\r\n    contact: '',\r\n    dateInsured: '',\r\n    birthdate: '',\r\n    codeNo: '',\r\n    userInsured: '',\r\n    gender: '',\r\n    mode: '',\r\n    civil: '',\r\n    forApproval: true\r\n  })\r\n\r\n  const [selectedGender, setSelectedGender] = useState(null)\r\n  const [selectedMode, setSelectedMode] = useState(null)\r\n  const [selectedCivil, setSelectedCivil] = useState(null)\r\n  const [errors, setErrors] = useState({})\r\n\r\n  useEffect(() => {\r\n    setIsLoaded(false)\r\n    getClient(id).then(({ client: { id, coverage, ...client } }) => {\r\n      setClient({\r\n        ...client,\r\n        dateInsured: new Date(client.dateInsured).toLocaleDateString(),\r\n        birthdate: client.birthdate\r\n          ? new Date(client.birthdate).toLocaleDateString()\r\n          : ''\r\n      })\r\n      setSelectedCivil({\r\n        id: 1,\r\n        value: client ? client.civil : '',\r\n        label: cap(client ? client.civil : '')\r\n      })\r\n\r\n      setSelectedGender({\r\n        id: 2,\r\n        value: client ? client.gender : '',\r\n        label: cap(client ? client.gender : '')\r\n      })\r\n\r\n      setSelectedMode({\r\n        id: 3,\r\n        value: client ? client.mode : '',\r\n        label: cap(client ? client.mode : '')\r\n      })\r\n\r\n      setIsLoaded(true)\r\n    })\r\n  }, [])\r\n\r\n  const codeNoValidation = () => {\r\n    return (\r\n      Joi.string()\r\n        //.regex(/^(\\d+-?)+\\d+$/)\r\n        .regex(/^[a-zA-Z0-9-]+$/)\r\n        .error(errors => {\r\n          errors.forEach(err => {\r\n            switch (err.type) {\r\n              case 'string.regex.base':\r\n                err.message =\r\n                  '\"Policy Number\" must only have a number and letter with hyphen'\r\n                break\r\n              case 'string.min':\r\n                err.message =\r\n                  '\"Policy Number\" must be equal to 15 characters long'\r\n                break\r\n              case 'string.max':\r\n                err.message =\r\n                  '\"Policy Number\" must be equal to 15 characters long'\r\n                break\r\n              default:\r\n                break\r\n            }\r\n          })\r\n          return errors\r\n        })\r\n        .min(15)\r\n        .max(15)\r\n        .label('Policy Number')\r\n    )\r\n  }\r\n\r\n  const schema = {\r\n    firstname: joiLettersOnly('Firstname'),\r\n    middlename: joiLettersOnly('Middlename'),\r\n    lastname: joiLettersOnly('Lastname'),\r\n    codeNo: codeNoValidation(),\r\n    contact: Joi.optional(),\r\n    address: Joi.optional(),\r\n    expiredDate: Joi.optional(),\r\n    dateInsured: Joi.string()\r\n      .required()\r\n      .label('Date Insured'),\r\n    birthdate: Joi.string()\r\n      .required()\r\n      .label('Birthdate'),\r\n    forApproval: Joi.optional(),\r\n    userInsured: Joi.optional(),\r\n    gender: Joi.string()\r\n      .required()\r\n      .label('Gender'),\r\n    mode: Joi.string()\r\n      .required()\r\n      .label('Mode of Payment'),\r\n    civil: Joi.string()\r\n      .required()\r\n      .label('Civil Status')\r\n  }\r\n\r\n  const handleChangeGender = gender => setSelectedGender(gender)\r\n\r\n  const handleChangeCivil = civil => setSelectedCivil(civil)\r\n\r\n  const handleChangeMode = mode => {\r\n    setSelectedMode(mode)\r\n  }\r\n\r\n  const getExpiredDate = (date, mode) => {\r\n    const dateInsured = new Date(date)\r\n\r\n    const expiredDate = new Date(dateInsured)\r\n\r\n    expiredDate.setMonth(dateInsured.getMonth() + getAddedMonth(mode))\r\n\r\n    return formatDate(expiredDate)\r\n  }\r\n\r\n  const handleSubmit = async (e, client) => {\r\n    if (client.codeNo === '') {\r\n      setErrors({ codeNo: `\"Policy Number\" is not allowed to be empty` })\r\n      return\r\n    }\r\n    const expiredDate = getExpiredDate(client.dateInsured, client.mode)\r\n\r\n    const _client = {\r\n      ...client,\r\n      dateInsured: new Date(client.dateInsured).toISOString(),\r\n      expiredDate: new Date(expiredDate).toISOString(),\r\n      birthdate: new Date(client.birthdate).toISOString()\r\n    }\r\n\r\n    try {\r\n      await onUpdateClient(id, _client)\r\n      toast.success('Saved')\r\n    } catch (error) {\r\n      console.log(error)\r\n    }\r\n  }\r\n\r\n  const genders = [\r\n    {\r\n      id: 1,\r\n      label: 'Male',\r\n      value: 'male'\r\n    },\r\n    {\r\n      id: 2,\r\n      label: 'Female',\r\n      value: 'female'\r\n    }\r\n  ]\r\n  const civils = [\r\n    {\r\n      id: 1,\r\n      value: 'single',\r\n      label: 'Single'\r\n    },\r\n    {\r\n      id: 2,\r\n      value: 'divorced',\r\n      label: 'Divorced'\r\n    },\r\n    {\r\n      id: 3,\r\n      value: 'widowed',\r\n      label: 'Widowed'\r\n    }\r\n  ]\r\n  const modes = [\r\n    {\r\n      id: 1,\r\n      value: 'monthly',\r\n      label: 'Monthly'\r\n    },\r\n    {\r\n      id: 2,\r\n      value: 'quarterly',\r\n      label: 'Quarterly'\r\n    },\r\n    {\r\n      id: 3,\r\n      value: 'semi',\r\n      label: 'Semi-Annually'\r\n    },\r\n    {\r\n      id: 4,\r\n      value: 'annually',\r\n      label: 'Annually'\r\n    }\r\n  ]\r\n\r\n  const getAddedMonth = mode => {\r\n    switch (mode) {\r\n      case 'monthly':\r\n        return 1\r\n      case 'quarterly':\r\n        return 3\r\n      case 'semi':\r\n        return 6\r\n      case 'annually':\r\n        return 12\r\n      default:\r\n        return 0\r\n    }\r\n  }\r\n\r\n  const handleDateInsured = date => {\r\n    setClient({\r\n      ...client,\r\n      dateInsured: formatDate(date)\r\n    })\r\n  }\r\n\r\n  const handleBirthdate = date => {\r\n    setClient({\r\n      ...client,\r\n      birthdate: formatDate(date)\r\n    })\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-2 mb-3 border-bottom\">\r\n        <h1 className=\"h2\">Edit Client</h1>\r\n      </div>\r\n      <Spinner isLoaded={isLoaded} className=\"spinner\">\r\n        <Form\r\n          data={{ data: client, setData: setClient }}\r\n          errors={{ errors, setErrors }}\r\n          onSubmit={handleSubmit}\r\n          schema={schema}\r\n        >\r\n          {({\r\n            renderInput,\r\n            renderSelect,\r\n            renderTextArea,\r\n            renderDatePicker,\r\n            renderButton,\r\n            renderCheckbox\r\n          }) => {\r\n            return (\r\n              <div className=\"row\">\r\n                <div className=\"col-6\">\r\n                  {renderInput('firstname', 'Firstname')}\r\n                  {renderInput('middlename', 'Middlename')}\r\n                  {renderInput('lastname', 'Lastname')}\r\n                  {renderSelect(\r\n                    'gender',\r\n                    'Gender',\r\n                    selectedGender,\r\n                    handleChangeGender,\r\n                    genders\r\n                  )}\r\n                  {renderSelect(\r\n                    'civil',\r\n                    'Civil Status',\r\n                    selectedCivil,\r\n                    handleChangeCivil,\r\n                    civils\r\n                  )}\r\n                  {renderDatePicker('birthdate', 'Birthdate', {\r\n                    onChange: handleBirthdate\r\n                  })}\r\n                  {renderInput('contact', 'Contact')}\r\n                  {renderTextArea('address', 'Address')}\r\n                </div>\r\n\r\n                <div className=\"col-6\">\r\n                  {renderDatePicker('dateInsured', 'Date Insured', {\r\n                    onChange: handleDateInsured\r\n                  })}\r\n                  {renderSelect(\r\n                    'mode',\r\n                    'Mode of Payment',\r\n                    selectedMode,\r\n                    handleChangeMode,\r\n                    modes\r\n                  )}\r\n                  {renderInput('codeNo', 'Policy No')}\r\n\r\n                  {renderButton('UPDATE', null, 'Updating...', true)}\r\n                  <button\r\n                    onClick={e => {\r\n                      e.preventDefault()\r\n                      props.history.replace('/reports/enforced')\r\n                    }}\r\n                    className=\"btn btn-grad-secondary btn-block\"\r\n                    name=\"back\"\r\n                  >\r\n                    Back\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            )\r\n          }}\r\n        </Form>\r\n      </Spinner>\r\n\r\n      <style jsx=\"\">{`\r\n        .spinner {\r\n          margin-top: 200px;\r\n          margin-bottom: 200px;\r\n        }\r\n      `}</style>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default EditClient\r\n","import React, { useEffect, memo } from 'react'\r\nimport SideMenu from './sideMenu'\r\nimport Dashboard from './menus/dashboard/index'\r\nimport AddFS from './menus/client/addFs'\r\nimport AddGPA from './menus/client/addgpa'\r\nimport Branch from './menus/branch/index'\r\nimport { toast } from 'react-toastify'\r\nimport Users from './menus/users/index'\r\nimport Reports from './menus/reports/index'\r\nimport Footer from './common/footer'\r\nimport UserProvider from '../providers/userProvider'\r\nimport ClientProvider from '../providers/clientProvider'\r\nimport ViewUser from './menus/users/view'\r\nimport EditUser from './menus/users/edit'\r\nimport NewUser from './menus/users/new'\r\nimport EditBranch from './menus/branch/edit'\r\nimport NewBranch from './menus/branch/new'\r\nimport EditClient from './menus/client/edit'\r\n\r\nconst Home = ({ menu, sub, ...props }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <UserProvider>\r\n        <ClientProvider>\r\n          <div className=\"container-fluid\">\r\n            <div\r\n              className=\"row\"\r\n              style={{ backgroundColor: 'transparent', minHeight: '800px' }}\r\n            >\r\n              <SideMenu>\r\n                <main\r\n                  role=\"main\"\r\n                  className=\"dashboard col-md-9 ml-sm-auto col-lg-10 pt-3 px-4 bg-light border border-secondary\"\r\n                >\r\n                  {menu === 'dashboard' && (\r\n                    <React.Fragment>\r\n                      {sub === 'newFs' && <AddFS {...props} />}\r\n                      {sub === 'newGPA' && <AddGPA {...props} />}\r\n                      {!sub && <Dashboard {...props} />}\r\n                    </React.Fragment>\r\n                  )}\r\n                  {menu === 'branches' && (\r\n                    <React.Fragment>\r\n                      {sub === 'editBranch' && <EditBranch {...props} />}\r\n                      {sub === 'newBranch' && <NewBranch {...props} />}\r\n                      {!sub && <Branch {...props} />}\r\n                    </React.Fragment>\r\n                  )}\r\n                  {menu === 'users' && (\r\n                    <React.Fragment>\r\n                      {sub === 'viewUser' && <ViewUser {...props} />}\r\n                      {sub === 'editUser' && <EditUser {...props} />}\r\n                      {sub === 'newUser' && <NewUser {...props} />}\r\n                      {!sub && <Users {...props} />}\r\n                    </React.Fragment>\r\n                  )}\r\n                  {menu === 'reports' && <Reports {...props} />}\r\n\r\n                  {menu === 'clients' && <EditClient {...props} />}\r\n                </main>\r\n              </SideMenu>\r\n\r\n              <Footer></Footer>\r\n            </div>\r\n          </div>\r\n        </ClientProvider>\r\n      </UserProvider>\r\n      <style jsx=\"\">{`\r\n        .dashboard {\r\n          border-radius: 0px 7px 0 0;\r\n        }\r\n      `}</style>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"logo\"></div>\r\n\r\n      <style jsx=\"\">{`\r\n        .logo {\r\n          width: 100%;\r\n          height: 100%;\r\n          border-radius: 5px 0 0 5px;\r\n          background-color: #343a40;\r\n        }\r\n      `}</style>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default Logo\r\n","import React, { useState, useContext } from 'react'\r\nimport Joi from 'joi-browser'\r\nimport { cap } from '../../services/utilsService'\r\nimport { toast } from 'react-toastify'\r\nimport withAuth from '../hoc/withAuth'\r\nimport Form from '../common/form'\r\nimport Logo from '../common/logo'\r\nimport { UserContext } from '../../context'\r\n\r\nconst Login = ({ auth, ...props }) => {\r\n  const [user, setUser] = useState({ username: '', password: '' })\r\n  const [errors, setErrors] = useState({})\r\n\r\n  const { onRefresh } = useContext(UserContext)\r\n\r\n  const schema = {\r\n    username: Joi.string()\r\n      .required()\r\n      .label('Username'),\r\n    password: Joi.string()\r\n      .required()\r\n      .label('Password')\r\n  }\r\n\r\n  const handleSubmit = async (e, data) => {\r\n    auth\r\n      .login(data)\r\n      .then(() => {\r\n        props.history.replace('/')\r\n      })\r\n      .catch(({ response }) => {\r\n        if (response && response.status === 401) {\r\n          toast.error(response.data.status.errors)\r\n        }\r\n      })\r\n  }\r\n\r\n  const navigateSignUp = () => {\r\n    props.history.replace('/sign-up')\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"row mt-3 mb-3 border border-secondary\">\r\n        <div className=\"col-8 p-0\">\r\n          <Logo />\r\n        </div>\r\n        <div className=\"col-4 p-3 pt-2\">\r\n          <h3>Login</h3>\r\n          <hr></hr>\r\n          <Form\r\n            data={{ data: user, setData: setUser }}\r\n            errors={{ errors, setErrors }}\r\n            onSubmit={handleSubmit}\r\n            schema={schema}\r\n          >\r\n            {({ renderInput, renderButton }) => {\r\n              return (\r\n                <React.Fragment>\r\n                  {renderInput('username', 'Username', 'text', 'fa-user')}\r\n                  {renderInput('password', 'Password', 'password', 'fa-key')}\r\n                  {renderButton('Login', null, 'Logging in...', true)}\r\n                  <p className=\"mt-3 text-center\">or</p>\r\n                </React.Fragment>\r\n              )\r\n            }}\r\n          </Form>\r\n          <button\r\n            onClick={navigateSignUp}\r\n            className=\"btn btn-grad-secondary btn-block\"\r\n            name=\"createAgent\"\r\n          >\r\n            Create Agent\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row mb-3 \">\r\n        <div className=\"card text-center border border-secondary\">\r\n          <div className=\"card-header bg-dark text-white\">Featured</div>\r\n          <div className=\"card-body\">\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-4\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">Special title treatment</h5>\r\n                    <p className=\"card-text\">\r\n                      It's a broader card with text below as a natural lead-in\r\n                      to extra content. This content is a little longer.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">Special title treatment</h5>\r\n                    <p className=\"card-text\">\r\n                      It's a broader card with text below as a natural lead-in\r\n                      to extra content. This content is a little longer.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-sm-4\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">Special title treatment</h5>\r\n                    <p className=\"card-text\">\r\n                      It's a broader card with text below as a natural lead-in\r\n                      to extra content. This content is a little longer.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-footer text-muted\">Copyright 2019</div>\r\n        </div>\r\n      </div>\r\n\r\n      <style jsx=\"\">{`\r\n        .row {\r\n          border-radius: 5px !important;\r\n          background-color: white;\r\n        }\r\n        .col-8;\r\n      `}</style>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default withAuth(Login)\r\n","import React, { Component, useState, useEffect } from 'react'\r\nimport Joi from 'joi-browser'\r\nimport Form from '../common/form'\r\nimport { getBranches, getManager } from '../../services/userService'\r\nimport { toast } from 'react-toastify'\r\nimport withAuth from './../hoc/withAuth'\r\nimport { joiLettersOnly } from '../../services/utilsService'\r\n\r\nconst SignUp = ({ auth, ...props }) => {\r\n  const [user, setUser] = useState({\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n    firstname: '',\r\n    middlename: '',\r\n    lastname: '',\r\n    codeNo: '',\r\n    manager: '',\r\n    confirmPassword: '',\r\n    position: '',\r\n    branch: ''\r\n  })\r\n  const agents = [\r\n    {\r\n      id: 1,\r\n      label: 'Sales Officer',\r\n      value: 'sales'\r\n    },\r\n    {\r\n      id: 2,\r\n      label: 'Promo Officer',\r\n      value: 'promo'\r\n    }\r\n  ]\r\n\r\n  const [branches, setBranches] = useState([])\r\n  const [hasBranches, setHasBranches] = useState(false)\r\n\r\n  const fetchBranches = setBranches => {\r\n    getBranches('/api/branches/taken').then(branches => {\r\n      setBranches(branches)\r\n      setHasBranches(branches.length > 0)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchBranches(setBranches)\r\n  }, [])\r\n\r\n  const [selectedPosition, setSelectedPosition] = useState(null)\r\n  const [selectedBranch, setSelectedBranch] = useState(null)\r\n\r\n  const [errors, setErrors] = useState({})\r\n\r\n\r\n\r\n  const schema = {\r\n    username: Joi.string()\r\n      .required()\r\n      .min(6)\r\n      .label('Username'),\r\n    email: Joi.string()\r\n      .required()\r\n      .label('Email'),\r\n    password: Joi.string()\r\n      .required()\r\n      .min(6)\r\n      .label('Password'),\r\n    confirmPassword: Joi.string()\r\n      .required()\r\n      .valid(Joi.ref('password'))\r\n      .options({ language: { any: { allowOnly: 'not match' } } })\r\n      .label('Password'),\r\n    firstname: joiLettersOnly('Firstname'),\r\n    middlename: joiLettersOnly('Middlename'),\r\n    lastname: joiLettersOnly('Lastname'),\r\n    position: Joi.string()\r\n      .required()\r\n      .label('Position'),\r\n    branch: Joi.string()\r\n      .required()\r\n      .label('Branch'),\r\n    codeNo: Joi.number()\r\n      .required()\r\n      .min(8)\r\n      .label('Code Number'),\r\n    manager: Joi.optional()\r\n  }\r\n\r\n  const handleChangePosition = selectedPosition =>\r\n    setSelectedPosition(selectedPosition)\r\n\r\n  const handleChangeBranch = selectedBranch => {\r\n    setSelectedBranch(selectedBranch)\r\n    setUser({ ...user, manager: '' })\r\n\r\n    if (!selectedBranch) return\r\n\r\n    // branch needs to populate after fetching manager\r\n    getManager(selectedBranch.id)\r\n      .then(fullname => {\r\n        setUser({ ...user, manager: fullname, branch: selectedBranch.value })\r\n      })\r\n      .catch(({ response }) => {\r\n        if (response && response.status === 404) {\r\n          toast.error(response.data.status.error)\r\n        }\r\n      })\r\n  }\r\n\r\n  const handleCheckUser = async ({ currentTarget: input }) => {\r\n    const { isTaken } = await auth.isUsernameTaken(input.value)\r\n\r\n    const _errors = { ...errors }\r\n\r\n    if (isTaken) {\r\n      _errors[input.name] = `\"${input.value}\" is taken`\r\n    }\r\n\r\n    setErrors(_errors)\r\n\r\n    return _errors\r\n  }\r\n\r\n  const handleSubmit = async (\r\n    e,\r\n    {\r\n      username,\r\n      email,\r\n      password,\r\n      firstname,\r\n      middlename,\r\n      lastname,\r\n      codeNo,\r\n      manager\r\n    }\r\n  ) => {\r\n    const _errors = await handleCheckUser(e)\r\n\r\n    if (Object.keys(_errors).length > 0) {\r\n      setErrors(_errors)\r\n      return\r\n    }\r\n\r\n    const user = {\r\n      username,\r\n      password,\r\n      position: selectedPosition ? selectedPosition.value : '',\r\n      profile: {\r\n        firstname,\r\n        middlename,\r\n        lastname,\r\n        email,\r\n        codeNo,\r\n        branch: { manager },\r\n        branch_id: selectedBranch ? selectedBranch.id : 0\r\n      }\r\n    }\r\n\r\n    try {\r\n      await auth.signUp(user)\r\n\r\n      toast.success('Please wait for verification!')\r\n\r\n      setUser({\r\n        username: '',\r\n        email: '',\r\n        password: '',\r\n        firstname: '',\r\n        middlename: '',\r\n        lastname: '',\r\n        codeNo: '',\r\n        manager: '',\r\n        branch: '',\r\n        position: '',\r\n        confirmPassword: ''\r\n      })\r\n\r\n      setSelectedPosition(null)\r\n      setSelectedBranch(null)\r\n\r\n      fetchBranches(setBranches)\r\n\r\n      setErrors(_errors)\r\n      props.history.replace('/login')\r\n    } catch ({ response }) {\r\n      if (response && (response.status === 400 || response.status === 401)) {\r\n        toast.error(response.data.status.errors)\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Form\r\n        data={{ data: user, setData: setUser }}\r\n        errors={{ errors, setErrors }}\r\n        onSubmit={handleSubmit}\r\n        schema={schema}\r\n      >\r\n        {({ renderInput, renderSelect, renderButton }) => {\r\n          return (\r\n            <React.Fragment>\r\n              <div className=\"row mt-3 mb-3 border border-secondary\">\r\n                <div className=\"side-content col-4\"></div>\r\n\r\n                <div className=\"col-4 pl-3 pr-2 pt-3\">\r\n                  <div className=\"col-12  d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pb-2 mb-4 border-bottom\">\r\n                    <h1 className=\"h2\">Sign Up Agent</h1>\r\n                  </div>\r\n\r\n                  {renderInput('firstname', 'Firstname')}\r\n                  {renderInput('middlename', 'Middlename')}\r\n                  {renderInput('lastname', 'Lastname')}\r\n\r\n                  {renderSelect(\r\n                    'position',\r\n                    'Position',\r\n                    selectedPosition,\r\n                    handleChangePosition,\r\n                    agents\r\n                  )}\r\n                  {renderInput('codeNo', 'Code Number')}\r\n                  {!hasBranches && <label>No Available Branch</label>}\r\n                  {hasBranches &&\r\n                    renderSelect(\r\n                      'branch',\r\n                      'Available Branch',\r\n                      selectedBranch,\r\n                      handleChangeBranch,\r\n                      branches\r\n                    )}\r\n                  {renderInput('manager', 'Manager', 'manager', '', {\r\n                    disabled: true\r\n                  })}\r\n                </div>\r\n                <div className=\"col-4 pl-2 pr-3 pt-5 mt-5\">\r\n                  {renderInput('username', 'Username', 'text', 'fa-user', {\r\n                    onBlur: handleCheckUser\r\n                  })}\r\n                  {renderInput('email', 'Email', 'email', 'fa-envelope')}\r\n                  {renderInput('password', 'Password', 'password', 'fa-key')}\r\n                  {renderInput(\r\n                    'confirmPassword',\r\n                    'Confirm Password',\r\n                    'password',\r\n                    'fa-key'\r\n                  )}\r\n                  {renderButton('Sign Up', null, 'Signing up...', true)}\r\n                  <button\r\n                    onClick={e => {\r\n                      e.preventDefault()\r\n                      props.history.replace('/login')\r\n                    }}\r\n                    className=\"btn btn-grad-secondary btn-block\"\r\n                    name=\"back\"\r\n                  >\r\n                    Back\r\n                  </button>\r\n                  <p className=\"text-primary p-2 \">\r\n                    *Note: Account needs to verify by manager to activate\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </React.Fragment>\r\n          )\r\n        }}\r\n      </Form>\r\n\r\n      <style jsx=\"\">{`\r\n        .col-4 {\r\n          padding: 0;\r\n        }\r\n        .row {\r\n          background-color: white;\r\n          border-radius: 7px;\r\n        }\r\n        .side-content {\r\n          background-color: #343a40;\r\n          border-radius: 7px 0 0 7px;\r\n        }\r\n      `}</style>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default withAuth(SignUp)\r\n","import React from 'react'\r\n\r\nconst NotFound = () => {\r\n  return <h1>Not Found</h1>\r\n}\r\n\r\nexport default NotFound\r\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport withAuth from '../hoc/withAuth'\n\nconst AuthRoute = ({\n  isAdminOrManager = false,\n  isAdmin = false,\n  auth,\n  path,\n  component: Component,\n  render,\n  ...rest\n}) => {\n  return (\n    <Route\n      {...rest}\n      render={props => {\n        if (!auth.isValidUser())\n          return (\n            <Redirect\n              to={{\n                pathname: '/login',\n                state: { from: props.location }\n              }}\n            />\n          )\n\n        if (isAdminOrManager && !auth.isAdminOrManager()) {\n          return <Redirect to=\"/not-found\" />\n        }\n        if (isAdmin && !auth.isAdmin()) {\n          return <Redirect to=\"/not-found\" />\n        }\n        return Component ? <Component {...props} /> : render(props)\n      }}\n    />\n  )\n}\n\nexport default withAuth(AuthRoute)\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport withAuth from '../hoc/withAuth'\r\n\r\nconst GuestRoute = ({ auth, path, component: Component, render, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        if (auth.isValidUser())\r\n          return (\r\n            <Redirect\r\n              to={{\r\n                pathname: '/',\r\n                state: { from: props.location }\r\n              }}\r\n            />\r\n          )\r\n        return Component ? <Component {...props} /> : render(props)\r\n      }}\r\n    />\r\n  )\r\n}\r\n\r\nexport default withAuth(GuestRoute)\r\n","import React from 'react'\r\nimport { Route, Redirect, Switch } from 'react-router-dom'\r\n\r\nimport Home from './components/home'\r\nimport Login from './components/auth/login'\r\nimport SignUp from './components/auth/signUp'\r\nimport NotFound from './components/common/notFound'\r\n\r\nimport AuthRoute from './components/common/authRoute'\r\nimport GuestRoute from './components/common/guestRoute'\r\n\r\nconst Routes = props => {\r\n  return (\r\n    <Switch>\r\n      <AuthRoute\r\n        path=\"/dashboard/new-fs\"\r\n        render={props => <Home {...props} menu=\"dashboard\" sub=\"newFs\" />}\r\n      />\r\n      <AuthRoute\r\n        path=\"/dashboard/new-gpa\"\r\n        render={props => <Home {...props} menu=\"dashboard\" sub=\"newGPA\" />}\r\n      />\r\n      <AuthRoute\r\n        path=\"/dashboard\"\r\n        render={props => <Home {...props} menu=\"dashboard\" />}\r\n      />\r\n      <AuthRoute\r\n        path=\"/branches/edit/:id\"\r\n        render={props => <Home {...props} menu=\"branches\" sub=\"editBranch\" />}\r\n      />\r\n      <AuthRoute\r\n        path=\"/branches/new\"\r\n        render={props => <Home {...props} menu=\"branches\" sub=\"newBranch\" />}\r\n      />\r\n      <AuthRoute\r\n        path=\"/branches\"\r\n        render={props => <Home {...props} menu=\"branches\" />}\r\n      />\r\n      <AuthRoute\r\n        path=\"/agents\"\r\n        render={props => <Home {...props} menu=\"agents\" />}\r\n      />\r\n      <AuthRoute\r\n        isAdmin\r\n        path=\"/users/new\"\r\n        render={props => <Home {...props} menu=\"users\" sub=\"newUser\" />}\r\n      />\r\n      <AuthRoute\r\n        isAdminOrManager\r\n        path=\"/users/edit/:id\"\r\n        render={props => <Home {...props} menu=\"users\" sub=\"editUser\" />}\r\n      />\r\n      <AuthRoute\r\n        path=\"/users/:id\"\r\n        render={props => <Home {...props} menu=\"users\" sub=\"viewUser\" />}\r\n      />\r\n      <AuthRoute\r\n        path=\"/users\"\r\n        isAdminOrManager\r\n        render={props => <Home {...props} menu=\"users\" />}\r\n      />\r\n      <AuthRoute\r\n        path=\"/reports/:name\"\r\n        render={props => <Home {...props} menu=\"reports\" />}\r\n      />\r\n      <AuthRoute\r\n        path=\"/reports\"\r\n        render={props => <Home {...props} menu=\"reports\" />}\r\n      />\r\n      <AuthRoute\r\n        path=\"/clients/edit/:id\"\r\n        render={props => <Home {...props} menu=\"clients\" />}\r\n      />\r\n      <GuestRoute path=\"/login\" render={props => <Login {...props}></Login>} />\r\n      <GuestRoute path=\"/sign-up\" component={SignUp} />\r\n      <Route path=\"/not-found\" component={NotFound} />>\r\n      <Redirect from=\"/\" exact to=\"/dashboard\" />\r\n      <Redirect to=\"/not-found\" />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react'\nimport { ToastContainer } from 'react-toastify'\nimport Nav from './components/common/nav'\nimport Routes from './routes'\nimport './App.css'\nimport 'react-toastify/dist/ReactToastify.css'\n\nconst App = () => {\n  return (\n    <React.Fragment>\n      <Nav></Nav>\n      <React.Fragment>\n        <ToastContainer autoClose={5000} />\n        <div className=\"container\">\n          <Routes />\n        </div>\n      </React.Fragment>\n    </React.Fragment>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css'\nimport App from './App'\n//import * as serviceWorker from './serviceWorker'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport 'font-awesome/css/font-awesome.css'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n//serviceWorker.unregister()\n"],"sourceRoot":""}